{"version":3,"sources":["libs/webpack.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAsC;AACtC,oDAA8B;AAC9B,iCAAkC;AAClC,6BAA4B;AAE5B;IAA6B,2BAAQ;IAArC;;IA4BA,CAAC;IA3BG;;;OAGG;IACG,yBAAO,GAAb,UACI,MAAuC;;;;;;;wBAEnC,aAAa,GAA0B,EAAE,CAAC;wBAC9C,IAAI,MAAM,EAAE;4BACR,IAAI,iBAAQ,CAAC,MAAM,CAAC,EAAE;gCAClB,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;6BAClD;iCAAM;gCACH,aAAa,GAAG,MAAM,CAAC;6BAC1B;yBACJ;;;;wBAEG,IAAI,CAAC,aAAa,EAAE;4BAChB,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,WAAI,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;yBAC7E;wBACM,qBAAM,IAAI,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,iBAAO,CAAC,aAAa,EAAE,UAAO,GAAG,EAAE,KAAK;;;;iDAC9D,GAAG,EAAH,wBAAG;4CAAS,qBAAM,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAA;gDAAhC,sBAAO,SAAyB,EAAC;gDACnC,qBAAM,KAAK,EAAA;gDAAlB,sBAAO,SAAW,EAAC;;;iCACtB,CAAC,EAH4B,CAG5B,CAAC,EAAA;4BAHH,sBAAO,SAGJ,EAAC;;;wBAEG,qBAAM,OAAO,CAAC,MAAM,CAAC,KAAG,CAAC,EAAA;4BAAhC,sBAAO,SAAyB,EAAC;;;;;KAExC;IACL,cAAC;AAAD,CA5BA,AA4BC,CA5B4B,mBAAQ,GA4BpC;AA5BY,0BAAO","file":"../../libs/webpack.js","sourcesContent":["import { LibsBase } from \"./libsbase\";\nimport webpack from 'webpack';\nimport { isString } from 'lodash';\nimport { join } from \"path\";\n\nexport class Webpack extends LibsBase {\n    /**\n     * build config import\n     * @param config configpath or webpack.Configuration\n     */\n    async runtime(\n        config?: string | webpack.Configuration\n    ): Promise<NodeJS.ReadWriteStream> {\n        let configuration: webpack.Configuration = {};\n        if (config) {\n            if (isString(config)) {\n                configuration = Object.create(require(config));\n            } else {\n                configuration = config;\n            }\n        }\n        try {\n            if (!configuration) {\n                configuration = Object.create(require(join(__dirname, 'webpack.config')));\n            }\n            return await new Promise(r => webpack(configuration, async (err, stats) => {\n                if (err) return await Promise.reject(err);\n                return await stats;\n            }));\n        } catch (err) {\n            return await Promise.reject(err);\n        }\n    }\n}"]}