{"version":3,"sources":["libs/tsc.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAsC;AACtC,8CAAwB;AACxB,0DAA8C;AAC9C,mDAAuC;AACvC,6BAA4B;AAC5B,kDAA2B;AAE3B;IAAyB,uBAAQ;IAAjC;;IAyCA,CAAC;IAxCG;;;;;;OAMG;IACG,qBAAO,GAAb,UACI,GAAY,EAAE,IAAa,EAC3B,EAAQ,EAAE,QAAgC;;;;;;wBAE1C;;2BAEG;wBACH,IAAI,GAAG;4BAAE,IAAI,CAAC,IAAI,GAAG,cAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;;;wBAKzB,CAAC,GAA4B,IAAI,CAAC,IAAY,CAAC;wBACrD,IAAI,CAAC,EAAE;4BAAE,EAAE,GAAG,GAAG,CAAC;wBAClB,IAAI,CAAC,QAAQ;4BAAE,QAAQ,GAAG,WAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,eAAe,CAAC,CAAC;wBAC/D,IAAI,CAAC,IAAI;4BAAE,IAAI,GAAG,QAAQ,CAAC;wBACrB,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;6BACrC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;wBACxC;;2BAEG;wBACH,sBAAO,gBAAK,CAAC;gCACT,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,cAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCAClC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;qCAC7C,IAAI,CAAC,cAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;6BAC7B,CAAC,EAAC;;;wBAKI,qBAAM,OAAO,CAAC,MAAM,CAAC,KAAG,CAAC,EAAA;;oBAHhC;;uBAEG;oBACH,sBAAO,SAAyB,EAAC;;;;;KAExC;IACL,UAAC;AAAD,CAzCA,AAyCC,CAzCwB,mBAAQ,GAyChC;AAzCY,kBAAG","file":"../../libs/tsc.js","sourcesContent":["import { LibsBase } from \"./libsbase\";\nimport gulp from \"gulp\";\nimport * as sourcemaps from 'gulp-sourcemaps';\nimport * as tsc from 'gulp-typescript';\nimport { join } from \"path\";\nimport merge from 'merge2';\n\nexport class TSC extends LibsBase {\n    /**\n     * ts component build to js\n     * @param src watch application *.ts\n     * @param dest build success copy to dirname\n     * @param ts gulp-typescript tools\n     * @param tsconfig gulp-typescript ts.Setting object or tsconfig and tsconfig path\n     */\n    async runtime(\n        src?: string, dest?: string,\n        ts?: any, tsconfig?: string | tsc.Settings\n    ): Promise<NodeJS.ReadWriteStream> {\n        /**\n         * created gulp pipe\n         */\n        if (src) this.gulp = gulp.src(src);\n        try {\n            /**\n             * build runtime\n             */\n            const g: NodeJS.ReadWriteStream = (this.gulp as any);\n            if (!ts) ts = tsc;\n            if (!tsconfig) tsconfig = join(process.cwd(), 'tsconfig.json');\n            if (!dest) dest = './dist';\n            const tsResult = g.pipe(sourcemaps.init())\n                .pipe(ts.createProject(tsconfig)());\n            /**\n             * merge result\n             */\n            return merge([\n                tsResult.dts.pipe(gulp.dest(dest)),\n                tsResult.js.pipe(sourcemaps.write(\"./sourcemaps\"))\n                    .pipe(gulp.dest(dest))\n            ]);\n        } catch (err) {\n            /**\n             * try error\n             */\n            return await Promise.reject(err);\n        }\n    }\n}\n"]}