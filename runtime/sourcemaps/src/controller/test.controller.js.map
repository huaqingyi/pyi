{"version":3,"sources":["src/controller/test.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,sCAMsB;AACtB,0DAAsD;AACtD,6CAA0C;AAC1C,6CAAyC;AAIzC,IAAa,cAAc,sBAA3B,MAAa,cAAe,SAAQ,mBAAa;IAWtC,KAAK;QACR,gDAAgD;QAChD,OAAO,kBAAY,CAAC,KAAM,SAAQ,gBAAc;YACrC,KAAK,CAAC,MAAM;gBACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;gBAC/B,uCAAuC;gBACvC,OAAO,MAAM,eAAe,CAAC;YACjC,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAMM,IAAI,CACA,GAAY,EACZ,GAAY,EACZ,GAAa,EACV,MAAW,EACb,IAAS;QAEjB,gDAAgD;QAChD,OAAO,kBAAY,CAAC,KAAM,SAAQ,gBAAc;YAGrC,KAAK,CAAC,MAAM;gBACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,MAAM,GAAG,gCAAgC,CAAC;gBAC/C,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;gBAC5C,gFAAgF;gBAChF,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,MAAM,GAAG,6BAA6B,CAAC;gBAC5C,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;gBACtC,6EAA6E;gBAC7E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,MAAM,GAAG,yCAAyC,CAAC;gBACxD,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;gBAC5B,yFAAyF;gBACzF,OAAO,IAAI,CAAC;YAChB,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAKM,IAAI;QACP,OAAO,eAAe,CAAC;IAC3B,CAAC;CACJ,CAAA;AA5DG;IADC,eAAS;8BACO,0BAAW;+CAAC;AAG7B;IADC,eAAS;8BACI,WAAI;4CAAC;AAKnB;IAHC,oBAAc,CAAC;QACZ,MAAM,EAAE,GAAG;KACd,CAAC;;;oCACc,gBAAM;2CAUrB;AAMD;IAJC,oBAAc,CAAC;QACZ,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,CAAC,0BAAoB,CAAC,GAAG,EAAE,0BAAoB,CAAC,IAAI,CAAC;KACjE,CAAC;IAEG,WAAA,SAAG,EAAE,CAAA;IACL,WAAA,SAAG,EAAE,CAAA;IACL,WAAA,SAAG,EAAE,CAAA;IACL,WAAA,YAAM,EAAE,CAAA;IACR,WAAA,UAAI,EAAE,CAAA;;;oCACR,gBAAM;0CAsBR;AAKD;IAHC,oBAAc,CAAC;QACZ,MAAM,EAAE,OAAO;KAClB,CAAC;;;;0CAGD;AA9DQ,cAAc;IAD1B,gBAAU;GACE,cAAc,CA+D1B;AA/DY,wCAAc","file":"../../../src/controller/test.controller.js","sourcesContent":["import {\n    RequestMappingMethod, autowired,\n    Controller, RequestMapping,\n    Ctx, Req, Res, Params, Body,\n    PYIExecption, PYIThrows,\n    PYIController\n} from '../../../src';\nimport { TestService } from '../service/test.service';\nimport { Nest } from '../components/nest';\nimport { TestVo } from './../vo/test.vo';\nimport { Context, Request, Response } from 'koa';\n\n@Controller\nexport class TestController extends PYIController {\n\n    @autowired\n    public service!: TestService;\n\n    @autowired\n    public nest!: Nest;\n\n    @RequestMapping({\n        prefix: '/'\n    })\n    public index(): TestVo {\n        // tslint:disable-next-line:max-classes-per-file\n        return PYIExecption(class extends TestController implements PYIThrows {\n            public async throws() {\n                console.log(this.service);\n                console.log(this.nest.merge());\n                // {\"err\":false,\"data\":\"Hello PYI ...\"}\n                return await 'Hello PYI ...';\n            }\n        });\n    }\n\n    @RequestMapping({\n        prefix: '/test',\n        methods: [RequestMappingMethod.GET, RequestMappingMethod.POST]\n    })\n    public test(\n        @Ctx() ctx: Context,\n        @Req() req: Request,\n        @Res() res: Response,\n        @Params() params: any,\n        @Body() body: any\n    ): TestVo {\n        // tslint:disable-next-line:max-classes-per-file\n        return PYIExecption(class extends TestController implements PYIThrows {\n            public errno!: number;\n            public errmsg!: string;\n            public async throws() {\n                this.errno = 1004;\n                this.errmsg = 'service query findAll sql err.';\n                let data = await this.service.testFindAll();\n                // {\"err\":true,\"data\":{},\"errno\":1004,\"errmsg\":\"service query findAll sql err.\"}\n                console.log('all', data);\n                this.errno = 1005;\n                this.errmsg = 'service query test sql err.';\n                data = await this.service.testQuery();\n                // {\"err\":true,\"data\":{},\"errno\":1005,\"errmsg\":\"service query test sql err.\"}\n                this.errno = 1006;\n                this.errmsg = 'service query test sql success try err.';\n                throw new Error('test ...');\n                // {\"err\":true,\"data\":{},\"errno\":1006,\"errmsg\":\"service query test sql success try err.\"}\n                return data;\n            }\n        });\n    }\n\n    @RequestMapping({\n        prefix: '/show'\n    })\n    public show() {\n        return 'test show ...';\n    }\n}\n"]}