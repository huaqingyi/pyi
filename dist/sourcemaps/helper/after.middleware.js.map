{"version":3,"sources":["helper/after.middleware.ts"],"names":[],"mappings":";;;;;;;;AAAA,6DAA6E;AAK7E,IAAa,eAAe,GAA5B,MAAa,eAAe;IAEjB,KAAK,CAAC,GAAG,CAAC,GAAY,EAAE,IAA2B;QACtD,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,KAAK,KAAK,EAAE;YAClD,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE;gBACpC,GAAG,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aACjE;SACJ;QACD,kCAAkC;QAClC,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;CACJ,CAAA;AAXY,eAAe;IAD3B,gCAAU,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;GACjB,eAAe,CAW3B;AAXY,0CAAe","file":"../../helper/after.middleware.js","sourcesContent":["import { Middleware, ExpressMiddlewareInterface } from 'routing-controllers';\nimport { Context } from 'koa';\nimport { PYIChokidar } from '../lib';\n\n@Middleware({ type: 'after' })\nexport class AfterMiddleware implements ExpressMiddlewareInterface {\n    public chokider!: PYIChokidar;\n    public async use(ctx: Context, next: (ctx: Context) => any) {\n        if (ctx.body && this.chokider.isViewObject === false) {\n            if (this.chokider.config.pyi.defaultVo) {\n                ctx.body = await this.chokider.config.pyi.defaultVo(ctx.body);\n            }\n        }\n        // console.log('after', ctx.body);\n        return await next(ctx);\n    }\n}\n"]}