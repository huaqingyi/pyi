{"version":3,"sources":["factory/factory.component.ts"],"names":[],"mappings":";;;AAAA,mCAA6B;AAC7B,kCAAkC;AAClC,mCAAkD;AAElD,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC1B,iDAA2B,CAAA;IAC3B,6CAAuB,CAAA;AAC3B,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAED,MAAa,gBAAiB,SAAQ,cAAO;IAQzC,YACW,GAAW,EACX,SAAc,EACd,IAAwB,EACxB,KAAW;QAElB,KAAK,EAAE,CAAC;QALD,QAAG,GAAH,GAAG,CAAQ;QACX,cAAS,GAAT,SAAS,CAAK;QACd,SAAI,GAAJ,IAAI,CAAoB;QACxB,UAAK,GAAL,KAAK,CAAM;IAGtB,CAAC;IAbM,MAAM,CAAC,KAAK;QACf,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IAaM,KAAK;QACR,OAAO,gBAAgB,CAAC,KAAK,EAAE,CAAC;IACpC,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,MAAW;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,OAAO,MAAM,MAAM,CAAC;IACxB,CAAC;IAEM,KAAK,CAAC,OAAO;QAChB,IAAI,QAAa,CAAC;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,SAAS,CAAC,KAAK,IAAI,mBAAU,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,KAAK,EAAE,KAAK,cAAO,EAAE;YACjF,QAAQ,IAAI,CAAC,IAAI,EAAE;gBACf,KAAK,kBAAkB,CAAC,SAAS;oBAC7B,MAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;oBAClC,MAAM,SAAS,CAAC,OAAO,EAAE,CAAC;oBAC1B,QAAQ,GAAG,MAAM,SAAS,CAAC;oBAC3B,MAAM;gBACV,KAAK,kBAAkB,CAAC,WAAW;oBAC/B,QAAQ,GAAG,MAAM,SAAS,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC5D,MAAM;aACb;SACJ;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,YAAG,CACX,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,SAAS,CAAC,IAAI,uCAAuC,CAC7F,CAAC,CAAC;SACN;QACD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;QAC3C,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC;IAC7B,CAAC;CACJ;AAhDD,4CAgDC","file":"../../factory/factory.component.js","sourcesContent":["import { red } from 'colors';\nimport { PYICore } from '../core';\nimport { isFunction, find, filter } from 'lodash';\n\nexport enum ComponentWiredType {\n    AUTOCONNECT = 'autoconnect',\n    AUTOWIRED = 'autowired'\n}\n\nexport class FactoryComponent extends PYICore {\n\n    public static _base() {\n        return FactoryComponent;\n    }\n\n    public target: any;\n\n    constructor(\n        public key: string,\n        public component: any,\n        public type: ComponentWiredType,\n        public props?: any\n    ) {\n        super();\n    }\n\n    public _base() {\n        return FactoryComponent._base();\n    }\n\n    public async _input(target: any) {\n        this.target = target;\n        return await target;\n    }\n\n    public async _output() {\n        let instance: any;\n        const Component = this.component;\n        if (Component._root && isFunction(Component._root) && Component._root() === PYICore) {\n            switch (this.type) {\n                case ComponentWiredType.AUTOWIRED:\n                    const component = new Component();\n                    await component._output();\n                    instance = await component;\n                    break;\n                case ComponentWiredType.AUTOCONNECT:\n                    instance = await Component._singleton()._output(this.props);\n                    break;\n            }\n        } else {\n            console.log(red(\n                `${this.target.name}: ${this.key} [${Component.name}] not extends standard I / O stream .`\n            ));\n        }\n        this.target.prototype[this.key] = instance;\n        return await this.target;\n    }\n}\n"]}