{"version":3,"sources":["cli/index.ts"],"names":[],"mappings":";;;;;;AAEA,+BAAqC;AACrC,gDAAwB;AACxB,2BAAqE;AACrE,mCAAoC;AACpC,oDAA4B;AAC5B,sDAA8B;AAC9B,iCAAgC;AAChC,uCAA+C;AAC/C,iDAAqC;AAErC,cAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,wBAAwB,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE;IAC1E,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;QAAE,OAAO,MAAM,OAAO,CAAC,GAAG,CAAC,YAAG,CAAC,2BAA2B,CAAC,CAAC,CAAC;KAAE;IAC5E,MAAM,OAAO,CAAC,GAAG,CAAC,cAAK,CACnB,2EAA2E,CAC9E,CAAC,CAAC;IACH,MAAM,IAAI,GAAG,gBAAM,EAAE,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IAC9C,MAAM,IAAI,GAAG,WAAI,CAAC,SAAS,EAAE,YAAY,IAAI,MAAM,CAAC,CAAC;IACrD,IAAI,CAAC,eAAU,CAAC,IAAI,CAAC,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC,cAAK,CACb,6EAA6E,CAChF,CAAC,CAAC;QACH,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,iBAAM,CAAC,cAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACnD,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,gBAAK,CAAC,cAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAClD,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,iBAAO,CAAC,6DAA6D,CAAC;aAC1F,IAAI,CAAC,sBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;KACtD;IACD,MAAM,OAAO,CAAC,GAAG,CAAC,cAAK,CACnB,sBAAsB,CACzB,CAAC,CAAC;IAEH,MAAM,QAAQ,GAAG,WAAI,CAAC,cAAO,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC;IACjD,MAAM,OAAO,GAAG,WAAI,CAAC,QAAQ,EAAE,qBAAqB,CAAC,CAAC;IAEtD,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,qBAAgB,CAAC,IAAI,CAAC;SAC1C,IAAI,CAAC,eAAO,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;IAEvD,MAAM,OAAO,CAAC,GAAG,CAAC,cAAK,CACnB,mBAAmB,CACtB,CAAC,CAAC;IACH,MAAM,IAAI,GAAG,WAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEzC,MAAM,eAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAE1B,MAAM,OAAO,CAAC,GAAG,CAAC,cAAK,CACnB,kBAAkB,CACrB,CAAC,CAAC;IAEH,OAAO,MAAM,oBAAI,CAAC,MAAM,IAAI,WAAW,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC;AAEH,cAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC","file":"../../cli/index.js","sourcesContent":["#!/usr/bin/env node\n\nimport { join, dirname } from 'path';\nimport args from 'args';\nimport { createWriteStream, existsSync, createReadStream } from 'fs';\nimport { green, red } from 'colors';\nimport moment from 'moment';\nimport request from 'request';\nimport { Extract } from 'unzip';\nimport { remove, mkdir, copy } from 'fs-extra';\nimport { exec } from 'child_process';\n\nargs.command('create', 'create new project ...', async (name, sub, options) => {\n    if (!sub[0]) { return await console.log(red('not have project name ...')); }\n    await console.log(green(\n        'download https://github.com/huaqingyi/pyi-template/archive/master.zip ...'\n    ));\n    const time = moment().format('YYYY-MM-DD HH');\n    const pack = join(__dirname, `../.temp/${time}.zip`);\n    if (!existsSync(pack)) {\n        console.log(green(\n            'redownload https://github.com/huaqingyi/pyi-template/archive/master.zip ...'\n        ));\n        await new Promise((r) => remove(dirname(pack), r));\n        await new Promise((r) => mkdir(dirname(pack), r));\n        await new Promise((r) => request('http://github.com/huaqingyi/pyi-template/archive/master.zip')\n            .pipe(createWriteStream(pack)).on('close', r));\n    }\n    await console.log(green(\n        'download success ...'\n    ));\n\n    const unzipdir = join(dirname(pack), 'resource');\n    const packdir = join(unzipdir, 'pyi-template-master');\n\n    await new Promise((r) => createReadStream(pack)\n        .pipe(Extract({ path: unzipdir })).on('close', r));\n\n    await console.log(green(\n        'unzip success ...'\n    ));\n    const pdir = join(process.cwd(), sub[0]);\n\n    await copy(packdir, pdir);\n\n    await console.log(green(\n        'copy success ...'\n    ));\n\n    return await exec(`cd ${pdir} && npm i`);\n});\n\nargs.parse(process.argv);\n"]}