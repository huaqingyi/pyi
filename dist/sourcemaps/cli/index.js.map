{"version":3,"sources":["cli/index.ts"],"names":[],"mappings":"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","file":"../../cli/index.js","sourcesContent":["#!/usr/bin/env node\n\nimport { join, dirname } from 'path';\nimport { createWriteStream, existsSync, createReadStream } from 'fs';\nimport { green, red } from 'colors';\nimport moment from 'moment';\nimport request from 'request';\nimport { Extract } from 'unzip';\nimport { remove, mkdir, copy } from 'fs-extra';\nimport { exec } from 'child_process';\n\nimport { Command, Execute } from 'yicommand';\nimport { PYIBuilder } from './pyi.builder';\nimport { PYIApplication } from './application';\n\n@Command({\n    context: 'PYI Framework ...',\n    version: require('../../package.json').version\n})\nexport class TestCommand {\n\n    @Execute('create <path>')\n    public async created(path: string) {\n        if (!path) { return await console.log(red('not have project name ...')); }\n        await console.log(green(\n            'download https://github.com/huaqingyi/pyi-template/archive/master.zip ...'\n        ));\n        const time = moment().format('YYYY-MM-DD HH');\n        const pack = join(__dirname, `../.temp/${time}.zip`);\n        if (!existsSync(pack)) {\n            console.log(green(\n                'redownload https://github.com/huaqingyi/pyi-template/archive/master.zip ...'\n            ));\n            await new Promise((r) => remove(dirname(pack), r));\n            await new Promise((r) => mkdir(dirname(pack), r));\n            await new Promise((r) => request('http://github.com/huaqingyi/pyi-template/archive/master.zip')\n                .pipe(createWriteStream(pack)).on('close', r));\n        }\n        await console.log(green(\n            'download success ...'\n        ));\n\n        const unzipdir = join(dirname(pack), 'resource');\n        const packdir = join(unzipdir, 'pyi-template-master');\n\n        await new Promise((r) => createReadStream(pack)\n            .pipe(Extract({ path: unzipdir })).on('close', r));\n\n        await console.log(green(\n            'unzip success ...'\n        ));\n        const pdir = join(process.cwd(), path);\n\n        await copy(packdir, pdir);\n\n        await console.log(green(\n            'copy success ...'\n        ));\n\n        return await exec(`cd ${pdir} && npm i`);\n    }\n\n    @Execute('start [path]')\n    public async start(path?: string) {\n        if (!path) {\n            path = join(process.cwd(), '.');\n        } else {\n            path = join(process.cwd(), path.replace(process.cwd(), ''));\n        }\n\n        const app: PYIApplication = new PYIApplication();\n\n        const builder = new PYIBuilder(app, [\n            join(path, '**/*.ts'),\n            join(path, '**/*.tsx'),\n            join(path, '**/*.js'),\n            join(path, '**/*.jsx'),\n        ], join(path, '.runtime'));\n        \n        await builder.build();\n    }\n}\n"]}