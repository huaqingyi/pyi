{"version":3,"sources":["cli/pyi.builder.ts"],"names":[],"mappings":"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","file":"../../cli/pyi.builder.js","sourcesContent":["import 'reflect-metadata';\nimport { src, dest, watch } from 'gulp';\nimport { join } from 'path';\nimport { createProject } from 'gulp-typescript';\nimport babel from 'gulp-babel';\nimport { get } from 'node-emoji';\nimport { blue, bgWhite, red, gray, green } from 'colors';\nimport { Transform } from 'readable-stream';\nimport chokidar from 'chokidar';\nimport { PYIApplication } from './application';\nimport { PYIApp } from '../core/pyi';\nimport { map, find } from 'lodash';\nimport { PYIAppConfiguration, PYIController, PYIInterceptor, PYIMiddleware, PYIPlugin } from '../decorators';\nimport { FactoryComponent } from '../factory';\n\nexport class PYIBuilder {\n    public comps: PYIApp[];\n    public mode: string;\n    public config: PYIAppConfiguration;\n\n    constructor(\n        private app: PYIApplication<any, any>,\n        private srcpath: string[],\n        private destpath: string,\n    ) {\n        this.comps = [];\n        this.mode = 'development';\n        if (process.env.NODE_ENV) { this.mode = process.env.NODE_ENV; }\n        this.config = new PYIAppConfiguration();\n    }\n\n    public async build() {\n        await src(this.srcpath)\n            .pipe(createProject(join(process.cwd(), 'tsconfig.json'))())\n            .pipe(babel())\n            .pipe(dest((file) => {\n                const output = join(this.destpath, file.relative.replace(\n                    new RegExp(`${file.stem}${file.extname}$`, 'gi'), ''\n                ));\n                const path = join(output, `${file.stem}${file.extname}`);\n                console.log(`${get('kiss')}  ${green(`${path}`)}`);\n                if (require.cache[path]) {\n                    delete require.cache[path];\n                }\n                return output;\n            }))\n            .pipe(new Transform({\n                objectMode: true,\n                transform: async (file, enc, callback) => {\n                    await this.addFile(file.path).then(async (comps) => {\n                        return await comps;\n                    });\n                    return await callback();\n                }\n            }))\n            .pipe(new Transform({\n                objectMode: true,\n                transform: async (file, enc, callback) => {\n                    await this.configrationInit();\n                    console.log(this.config);\n                    return await callback();\n                }\n            }));\n    }\n\n    public async configrationInit() {\n        const factorys: FactoryComponent[] = [];\n        await Promise.all(map(this.comps, async (comp: any, i: number) => {\n            const { _base } = await comp;\n            if (comp && comp.prototype) {\n                comp.prototype.logger = this.app.logger;\n            }\n            map(comp.prototype, (prototype) => {\n                if (prototype._base && prototype._base() === FactoryComponent) {\n                    prototype._input(comp);\n                    factorys.push(prototype);\n                }\n            });\n            if (!this.config.controllers) { this.config.controllers = []; }\n            if (!this.config.interceptors) { this.config.interceptors = []; }\n            if (!this.config.middlewares) { this.config.middlewares = []; }\n            if (!this.config.plugins) { this.config.plugins = []; }\n\n            if (_base && _base() === PYIController) { this.config.controllers.push(comp); }\n            if (_base && _base() === PYIInterceptor) { this.config.interceptors.push(comp); }\n            if (_base && _base() === PYIMiddleware) { this.config.middlewares.push(comp); }\n            if (_base && _base() === PYIPlugin) { this.config.plugins.push(comp); }\n            return await comp;\n        }));\n\n        await this.factoryComponent(factorys);\n\n        this.config.plugins = this.config.plugins.sort(\n            (p1, p2) => {\n                const i1 = (p1.prototype.props || { priority: 0 }).priority || 0;\n                const i2 = (p2.prototype.props || { priority: 0 }).priority || 0;\n                return i2 - i1;\n            }\n        );\n        return await this.config;\n    }\n\n    public async factoryComponent(factorys: FactoryComponent[]) {\n        const fs: FactoryComponent[] = [];\n        await Promise.all(map(factorys, async (factory) => {\n            if (find(factorys, (f) => f.target === factory.component)) {\n                await fs.push(factory);\n            } else {\n                await factory._output();\n            }\n            return factory;\n        }));\n        if (fs.length > 0) { await this.factoryComponent(fs); }\n        return await factorys;\n    }\n\n    public async addFile(path: string) {\n        let comp: any = {};\n        try {\n            comp = await import(path);\n            // tslint:disable-next-line:no-empty\n        } catch (err) {\n            console.log(bgWhite(`${get('no_entry')}  ${red(err)}`));\n        }\n\n        if (!comp) { return false; }\n        const comps = await Promise.all(map(comp, async (o, i) => {\n            if (!comp[i] || !comp[i].prototype) { return await o; }\n            comp[i].prototype.mode = await this.mode;\n            if (comp[i]._pyi) {\n                const _pyi = comp[i]._pyi();\n                comp[i]._pyi = () => ({\n                    ..._pyi, path\n                });\n            } else {\n                comp[i]._pyi = () => ({ path });\n            }\n            const { _base } = await comp[i];\n            if (_base && _base() === PYIAppConfiguration) {\n                this.config = await (comp[i] as any)._pyiconnect()._pyiruntime();\n            }\n            await this.comps.push(o);\n            return await o;\n        }));\n        console.log(`${get('kiss')}  ${gray(`ready ${path} has been added ...`)}`);\n        return await comps;\n    }\n}\n"]}