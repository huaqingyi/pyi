{"version":3,"sources":["config/config.ts"],"names":[],"mappings":";;AAKA,+DAAmE;AACnE,8CAA0C;AAmF1C,MAAa,mBAAmB;CAqB/B;AArBD,kDAqBC;AAED,gDAAgD;AAChD,MAAa,eAAgB,SAAQ,mBAAmB;IAEpD,YAAY,GAAG,KAAU;QACrB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG;YACX,UAAU,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC;SACrD,CAAC;QACF,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,EAAE,IAAS,EAAE,GAAW,EAAE,KAAc,EAAE,EAAE;YAClE,MAAM,SAAS,GAAG,CAAC,KAAM,SAAQ,kBAAK;aAGrC,CAAC,CAAC;YACH,eAAE,CAAC,SAAS,CAAC,CAAC;YACd,IAAI,IAAI,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,GAAG,EAAE;gBACL,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aACxC;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,GAAG;YACnB,OAAO,EAAE,MAAM;YACf,WAAW,EAAE,KAAK;YAClB,aAAa,EAAE,KAAK;YACpB,MAAM,EAAE,QAAQ;YAChB,MAAM,EAAE,UAAU;YAClB,GAAG,EAAE;gBACD,KAAK;gBACL,QAAQ;gBACR,gBAAgB;gBAChB,eAAe;aAClB;YACD,sBAAsB,EAAE,IAAI;YAC5B,qBAAqB,EAAE,IAAI;YAC3B,eAAe,EAAE,IAAI;SACxB,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;CACJ;AAxCD,0CAwCC;AAED,gDAAgD;AAChD,MAAa,uBAA+B,SAAQ,oCAA2B;IAM3E,YAAY,MAAuB,EAAE,KAAa;QAC9C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IARM,MAAM,CAAC,QAAQ;QAClB,OAAO,uBAAuB,CAAC;IACnC,CAAC;CAOJ;AAVD,0DAUC","file":"../../config/config.js","sourcesContent":["import { Settings } from 'gulp-typescript';\nimport { AuthorizationChecker } from 'routing-controllers/AuthorizationChecker';\nimport { CurrentUserChecker } from 'routing-controllers/CurrentUserChecker';\nimport { ValidatorOptions } from 'class-validator';\nimport { ClassTransformOptions } from 'class-transformer';\nimport { PYIAutoConfiguration } from '../decorators/configuration';\nimport { PYIVo, Vo } from '../decorators';\n\nexport interface ServerConfig {\n\n    /**\n     * Indicates if cors are enabled.\n     * This requires installation of additional module (cors for express and kcors for koa).\n     */\n    cors?: boolean | Object;\n    /**\n     * Global route prefix, for example '/api'.\n     */\n    routePrefix?: string;\n    /**\n     * Indicates if class-transformer should be used to perform serialization / deserialization.\n     */\n    classTransformer?: boolean;\n    /**\n     * Global class transformer options passed to class-transformer during classToPlain operation.\n     * This operation is being executed when server returns response to user.\n     */\n    classToPlainTransformOptions?: ClassTransformOptions;\n    /**\n     * Global class transformer options passed to class-transformer during plainToClass operation.\n     * This operation is being executed when parsing user parameters.\n     */\n    plainToClassTransformOptions?: ClassTransformOptions;\n    /**\n     * Indicates if class-validator should be used to auto validate objects injected into params.\n     * You can also directly pass validator options to enable validator with a given options.\n     */\n    validation?: boolean | ValidatorOptions;\n    /**\n     * Indicates if development mode is enabled.\n     * By default its enabled if your NODE_ENV is not equal to 'production'.\n     */\n    development?: boolean;\n    /**\n     * Indicates if default routing-controller's error handler is enabled or not.\n     * Enabled by default.\n     */\n    defaultErrorHandler?: boolean;\n    /**\n     * Map of error overrides.\n     */\n    errorOverridingMap?: {\n        [key: string]: any;\n    };\n    /**\n     * Special function used to check user authorization roles per request.\n     * Must return true or promise with boolean true resolved for authorization to succeed.\n     */\n    authorizationChecker?: AuthorizationChecker;\n    /**\n     * Special function used to get currently authorized user.\n     */\n    currentUserChecker?: CurrentUserChecker;\n    /**\n     * Default settings\n     */\n    defaults?: {\n        /**\n         * If set, all null responses will return specified status code by default\n         */\n        nullResultCode?: number;\n        /**\n         * If set, all undefined responses will return specified status code by default\n         */\n        undefinedResultCode?: number;\n        /**\n         * Default param options\n         */\n        paramOptions?: {\n            /**\n             * If true, all non-set parameters will be required by default\n             */\n            required?: boolean;\n        };\n    };\n\n    defaultVo?: (data: any, err?: Error, errno?: number) => Promise<PYIVo>;\n}\n\nexport class ConfigurationServer {\n    public entry!: string;\n    public output!: string;\n    public watch!: boolean;\n    public mode!: string;\n    public runtime!: boolean;\n    public resolve!: {\n        alias?: Array<{ [x: string]: string }>;\n        extensions: string[];\n    };\n    public pyi!: ServerConfig;\n    public compilerOptions!: Settings;\n    public server!: {\n        historyApiFallback?: boolean,\n        hot?: boolean,\n        inline?: boolean,\n        progress?: boolean,\n        port?: number,\n        host?: string,\n        disableHostCheck?: boolean\n    };\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class AppConfigOption extends ConfigurationServer {\n\n    constructor(...props: any) {\n        super();\n        this.entry = '';\n        this.output = '';\n        this.resolve = {\n            extensions: ['.js', '.jsx', '.vue', '.ts', '.tsx']\n        };\n        this.pyi = {};\n        this.pyi.defaultVo = async (data: any, err?: Error, errno?: number) => {\n            const DefaultVo = (class extends PYIVo {\n                public err!: boolean;\n                public data!: any;\n            });\n            Vo(DefaultVo);\n            let resp = new DefaultVo(data);\n            if (err) {\n                resp = await resp.throws(err, errno);\n            }\n            return resp;\n        };\n        this.compilerOptions = {\n            charset: 'utf8',\n            declaration: false,\n            noImplicitAny: false,\n            target: 'esnext',\n            module: 'commonjs',\n            lib: [\n                'es7',\n                'es2018',\n                'es2018.promise',\n                'es2018.regexp'\n            ],\n            experimentalDecorators: true,\n            emitDecoratorMetadata: true,\n            esModuleInterop: true\n        };\n        this.server = {};\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class PYIAutoAppConfiguration<Props> extends PYIAutoConfiguration<Props> {\n    public static _extends() {\n        return PYIAutoAppConfiguration;\n    }\n\n    public default: AppConfigOption;\n    constructor(config: AppConfigOption, props?: Props) {\n        super();\n        this.default = config;\n    }\n}\n"]}