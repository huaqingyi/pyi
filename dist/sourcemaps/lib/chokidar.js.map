{"version":3,"sources":["lib/chokidar.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,wCAAgE;AAChE,wDAA+C;AAC/C,mCAA8C;AAC9C,mCAAqC;AACrC,sCAAqE;AACrE,8CAA8F;AAC9F,+BAA4C;AAC5C,oEAAwC;AACxC,+BAA4B;AAC5B,yCAAqC;AACrC,mCAAoC;AAGpC,MAAa,WAAW;IAiBpB,YAAY,OAAe,EAAE,WAAgB,EAAE,MAAuB;QAClE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,WAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,kBAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACpD,CAAC;IA5BM,MAAM,CAAC,OAAO,CAAC,OAAe,EAAE,WAAgB;QACnD,OAAO,IAAI,WAAW,CAAC,OAAO,EAAE,WAAW,EAAE,kBAAO,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;IAC3E,CAAC;IA4BM,KAAK,CAAC,WAAW,CAAC,IAAY;QACjC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE;YACvD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC1E,OAAO,MAAM,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3D;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,KAAK,CAAC,OAAO,CAAC,IAAY;QAC7B,IAAI;YACA,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;gBAAE,OAAO,KAAK,CAAC;aAAE;YACpD,MAAM,IAAI,GAAG,wDAAa,IAAI,GAAC,CAAC;YAChC,IAAI,CAAC,IAAI,EAAE;gBAAE,OAAO,KAAK,CAAC;aAAE;YAC5B,YAAG,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACf,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;oBAAE,OAAO,CAAC,CAAC;iBAAE;gBAC3B,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;oBACd,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;oBAC5B,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC5C;gBACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;SACN;QAAC,OAAO,GAAG,EAAE;YACV,IAAI,CAAC,aAAa,GAAG;gBACjB,GAAG,EAAE,IAAI,KAAK,CAAC,uCAAuC,CAAC;gBACvD,MAAM,EAAE,GAAG;aACd,CAAC;SACL;QACD,OAAO,CAAC,GAAG,CAAC,cAAK,CAAC,QAAQ,IAAI,qBAAqB,CAAC,CAAC,CAAC;IAC1D,CAAC;IAEM,KAAK,CAAC,eAAe,CAAC,WAAkB,EAAE,WAAkB,EAAE,YAAmB;QACpF,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QAE3B,yBAAgB,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9C,IAAI,IAAI,CAAC,aAAa,EAAE;YAAE,yBAAgB,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;SAAE;QAClF,yBAAgB,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3C,WAAW,CAAC,OAAO,CAAC,yBAAgB,CAAC,CAAC;QACtC,wBAAe,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC1C,WAAW,CAAC,IAAI,CAAC,wBAAe,CAAC,CAAC;QAElC,MAAM,GAAG,GAAQ,4BAAe,CAAC;YAC7B,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG;YAClB,WAAW,EAAE,KAAK;YAClB,mBAAmB,EAAE,KAAK;YAC1B,WAAW;YACX,WAAW;YACX,YAAY;SACf,CAAC,CAAC;QAEH,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,GAAQ,EAAE,GAAY,EAAE,EAAE;YAC7C,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE;gBAC3B,GAAG,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;aACvD;iBAAM;gBACH,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC;aAClB;QACL,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,IAAa,EAAE,GAAY,EAAE,EAAE;YAC/C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,GAAG,CAAC,wBAAU,EAAE,CAAC,CAAC;QAEtB,IAAI,IAAI,GAAG,WAAW,CAAC;QAEvB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACpB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,WAAW,CAAC;SACjD;QAED,IAAI,CAAC,GAAG,GAAG,MAAM,mBAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAEpF,OAAO,CAAC,GAAG,CAAC,gBAAO,CAAC,8CAA8C,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACtG,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC;IAC1B,CAAC;IAEM,KAAK,CAAC,KAAK;QACd,MAAM,WAAW,GAAe,EAAE,CAAC;QACnC,MAAM,WAAW,GAAe,EAAE,CAAC;QACnC,MAAM,YAAY,GAAe,EAAE,CAAC;QACpC,MAAM,OAAO,CAAC,GAAG,CAAC,YAAG,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;YAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAAE,OAAO,IAAI,CAAC;aAAE;YACpC,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,0BAAa,EAAE;gBAAE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAAE;YAClE,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,0BAAa,EAAE;gBAAE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAAE;YAClE,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,2BAAc,EAAE;gBAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAAE;YACpE,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,gCAAuB,EAAE;gBAC7C,MAAM,OAAO,GAAG,IAAI,CAAC;gBACrB,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;gBACjC,MAAM,QAAQ,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACjD,YAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBACzB,IAAI,mBAAU,CAAC,CAAC,CAAC,EAAE;wBACf,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAClC;yBAAM;wBACH,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;qBACnB;gBACL,CAAC,CAAC,CAAC;gBACH,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC9C,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;oBAAE,OAAO,MAAM,CAAC,KAAK,CAAC;iBAAE;gBAC3C,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;oBAAE,OAAO,MAAM,CAAC,MAAM,CAAC;iBAAE;gBAC7C,IAAI,CAAC,MAAM,GAAG,eAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAC1C,IAAI,CAAC,MAAM,GAAG,kBAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACzC,OAAO,CAAC,GAAG,CAAC,aAAI,CAAC,4BAA4B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aAC5E;YACD,OAAO,MAAM,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC;QAEJ,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;YACjC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC;YAChF,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,OAAO,EAAE,IAAI,CAAC,OAAO;SACxB,CAAC,CAAC;IACP,CAAC;CACJ;AA9ID,kCA8IC","file":"../../lib/chokidar.js","sourcesContent":["import { AfterMiddleware, BeforeMiddleware } from './../helper';\nimport chokidar, { FSWatcher } from 'chokidar';\nimport { blue, magenta, green } from 'colors';\nimport { map, extend } from 'lodash';\nimport { AppConfigOption, PYIAutoAppConfiguration } from '../config';\nimport { createKoaServer, PYIController, PYIMiddleware, PYIInterceptor } from '../decorators';\nimport { Server, createServer } from 'http';\nimport bodyParser from 'koa-bodyparser';\nimport { join } from 'path';\nimport { PYIArgs } from './pyi.args';\nimport { isFunction } from 'lodash';\nimport Koa, { Context } from 'koa';\n\nexport class PYIChokidar {\n    public static runtime(dirname: string, application: any) {\n        return new PYIChokidar(dirname, application, PYIArgs.reflact().config);\n    }\n\n    public isViewObject: boolean;\n    public config: AppConfigOption;\n    private dirname: string;\n    private watcher: FSWatcher;\n    private files: { [x: string]: any };\n    private app!: Server;\n    private application: any;\n    private loadFileError?: {\n        use?: Error,\n        detail: Error\n    };\n\n    constructor(dirname: string, application: any, config: AppConfigOption) {\n        this.dirname = dirname;\n        this.config = config;\n        this.config.entry = dirname;\n        this.config.output = join(dirname, 'runtime');\n        this.files = {};\n        this.watcher = chokidar.watch(this.dirname);\n        this.application = application;\n        this.isViewObject = false;\n\n        this.watcher.on('add', this.addFile.bind(this));\n        this.watcher.on('ready', this.ready.bind(this));\n    }\n\n    public async authFileExt(path: string) {\n        if (this.config.resolve && this.config.resolve.extensions) {\n            const exts = this.config.resolve.extensions.join('|').split('.').join('');\n            return await new RegExp(`.(${exts})$`, 'gi').test(path);\n        }\n        return false;\n    }\n\n    public async addFile(path: string) {\n        try {\n            if (!await this.authFileExt(path)) { return false; }\n            const comp = await import(path);\n            if (!comp) { return false; }\n            map(comp, (o, i) => {\n                if (!comp[i]) { return o; }\n                if (comp[i]._pyi) {\n                    const _pyi = comp[i]._pyi();\n                    comp[i]._pyi = () => ({ ..._pyi, path });\n                }\n                this.files[`${i}_${path}`] = comp[i];\n            });\n        } catch (err) {\n            this.loadFileError = {\n                use: new Error('import project file component error .'),\n                detail: err\n            };\n        }\n        console.log(green(`File ${path} has been added ...`));\n    }\n\n    public async loadApplication(controllers: any[], middlewares: any[], interceptors: any[]) {\n        await this.watcher.close();\n\n        BeforeMiddleware.prototype.comps = this.files;\n        if (this.loadFileError) { BeforeMiddleware.prototype.error = this.loadFileError; }\n        BeforeMiddleware.prototype.chokider = this;\n        middlewares.unshift(BeforeMiddleware);\n        AfterMiddleware.prototype.chokider = this;\n        middlewares.push(AfterMiddleware);\n\n        const app: Koa = createKoaServer({\n            ...this.config.pyi,\n            development: false,\n            defaultErrorHandler: false,\n            controllers,\n            middlewares,\n            interceptors\n        });\n\n        app.on('error', async (err: any, ctx: Context) => {\n            if (this.config.pyi.defaultVo) {\n                ctx.body = await this.config.pyi.defaultVo({}, err);\n            } else {\n                ctx.body = err;\n            }\n        });\n\n        app.on('vo', async (isvo: boolean, ctx: Context) => {\n            this.isViewObject = isvo;\n        });\n\n        app.use(bodyParser());\n\n        let host = 'localhost';\n\n        if (this.config.server) {\n            host = this.config.server.host || 'localhost';\n        }\n\n        this.app = await createServer(app.callback()).listen(this.config.server.port, host);\n\n        console.log(magenta(`Hello Starter PYI Server: Listen on http://${host}:${this.config.server.port}`));\n        return await this.app;\n    }\n\n    public async ready() {\n        const controllers: Function[] = [];\n        const middlewares: Function[] = [];\n        const interceptors: Function[] = [];\n        await Promise.all(map(this.files, async (comp) => {\n            if (!comp._extends) { return comp; }\n            if (comp._extends() === PYIController) { controllers.push(comp); }\n            if (comp._extends() === PYIMiddleware) { middlewares.push(comp); }\n            if (comp._extends() === PYIInterceptor) { interceptors.push(comp); }\n            if (comp._extends() === PYIAutoAppConfiguration) {\n                const Setting = comp;\n                const { props } = comp.prototype;\n                const instance = new Setting(this.config, props);\n                map(comp.prototype, (o, i) => {\n                    if (isFunction(o)) {\n                        instance[i] = o.bind(instance);\n                    } else {\n                        instance[i] = o;\n                    }\n                });\n                const config = instance._runtime(this.config);\n                if (!config.entry) { delete config.entry; }\n                if (!config.output) { delete config.output; }\n                this.config = extend(this.config, config);\n                this.config = PYIArgs.reset(this.config);\n                console.log(blue(`listen use command port: ${this.config.server.port}`));\n            }\n            return await comp;\n        }));\n\n        await this.application.complete.next({\n            starter: this.loadApplication.bind(this, controllers, middlewares, interceptors),\n            config: this.config,\n            watcher: this.watcher\n        });\n    }\n}\n"]}