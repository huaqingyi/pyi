{"version":3,"sources":["lib/pyi.args.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AACxB,sCAA4C;AAE5C,MAAsB,aAAa;IAO/B;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,wBAAe,EAAE,CAAC;IACxC,CAAC;CACJ;AAVD,sCAUC;AAED,gDAAgD;AAChD,MAAa,OAAQ,SAAQ,aAAa;IAoBtC;QACI,KAAK,EAAE,CAAC;QACR,cAAI,CAAC,MAAM,CACP,MAAM,EACN,8FAA8F,EAC9F,aAAa,CAChB,CAAC,MAAM,CACJ,OAAO,EACP,mDAAmD,CACtD,CAAC,MAAM,CACJ,MAAM,EACN,iDAAiD,CACpD,CAAC,MAAM,CAAC,SAAS,EAAE,2DAA2D,CAAC,CAAC;QAEjF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,cAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACjC,CAAC;IArCM,MAAM,CAAC,QAAQ;QAClB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YAAE,OAAO,CAAC,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC;SAAE;QACtD,OAAO,OAAO,CAAC,KAAK,CAAC;IACzB,CAAC;IAEM,MAAM,CAAC,OAAO;QACjB,OAAO,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,MAAuB;QACvC,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE;YAAE,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;SAAE;QAC7D,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE;YAAE,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;SAAE;QACpE,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE;YAAE,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;SAAE;QAChE,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE;YAAE,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;SAAE;QACtE,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IACzC,CAAC;CAuBJ;AAzCD,0BAyCC","file":"../../lib/pyi.args.js","sourcesContent":["import args from 'args';\nimport { AppConfigOption } from '../config';\n\nexport abstract class PYIArgsOption {\n    public mode!: string;\n    public watch?: boolean;\n    public runtime?: boolean;\n    public port?: number;\n    public config: AppConfigOption;\n\n    constructor() {\n        this.config = new AppConfigOption();\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class PYIArgs extends PYIArgsOption {\n\n    public static _this: PYIArgs;\n    public static register(): PYIArgs {\n        if (!PYIArgs._this) { PYIArgs._this = new PYIArgs(); }\n        return PYIArgs._this;\n    }\n\n    public static reflact() {\n        return PYIArgs.register();\n    }\n\n    public static reset(config: AppConfigOption) {\n        if (PYIArgs._this.mode) { config.mode = PYIArgs._this.mode; }\n        if (PYIArgs._this.port) { config.server.port = PYIArgs._this.port; }\n        if (PYIArgs._this.watch) { config.watch = PYIArgs._this.watch; }\n        if (PYIArgs._this.runtime) { config.runtime = PYIArgs._this.runtime; }\n        return PYIArgs._this.config = config;\n    }\n\n    constructor() {\n        super();\n        args.option(\n            'mode',\n            'The application running type, default is development [development, production, ${your mode}]',\n            'development'\n        ).option(\n            'watch',\n            'The application running watch, default app config'\n        ).option(\n            'port',\n            'The application listen port, default app config'\n        ).option('runtime', 'The application runing build to es5, default app config .');\n\n        const { mode, watch, port, runtime } = args.parse(process.argv);\n        this.mode = mode;\n        this.port = port;\n        this.watch = Boolean(watch);\n        this.runtime = Boolean(runtime);\n        this.config.mode = this.mode;\n    }\n}\n"]}