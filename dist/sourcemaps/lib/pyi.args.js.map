{"version":3,"sources":["lib/pyi.args.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AACxB,kCAA0C;AAE1C,MAAsB,aAAa;IAO/B;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,sBAAe,EAAE,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,aAAa,CAAC;QAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,KAAK,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC;IACpE,CAAC;CACJ;AAdD,sCAcC;AAED,gDAAgD;AAChD,MAAa,OAAQ,SAAQ,aAAa;IAgBtC;QACI,KAAK,EAAE,CAAC;QACR,cAAI,CAAC,MAAM,CAAC,MAAM,EAAE,8FAA8F,EAAE,aAAa,CAAC;aAC7H,MAAM,CAAC,OAAO,EAAE,8CAA8C,EAAE,KAAK,CAAC;aACtE,MAAM,CAAC,MAAM,EAAE,yDAAyD,EAAE,IAAI,CAAC;aAC/E,MAAM,CAAC,SAAS,EAAE,uCAAuC,EAAE,KAAK,CAAC,CAAC;QAEvE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,cAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACvC,CAAC;IA7BM,MAAM,CAAC,QAAQ;QAClB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YAAE,OAAO,CAAC,KAAK,GAAG,IAAI,OAAO,EAAE,CAAC;SAAE;QACtD,OAAO,OAAO,CAAC,KAAK,CAAC;IACzB,CAAC;IAEM,MAAM,CAAC,OAAO;QACjB,OAAO,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,MAAuB;QACvC,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IACzC,CAAC;CAmBJ;AAjCD,0BAiCC","file":"../../lib/pyi.args.js","sourcesContent":["import args from 'args';\nimport { AppConfigOption } from '../core';\n\nexport abstract class PYIArgsOption {\n    public mode: string;\n    public watch: boolean;\n    public runtime: boolean;\n    public port: number;\n    public config: AppConfigOption;\n\n    constructor() {\n        this.config = new AppConfigOption();\n        this.mode = this.config.mode || 'development';\n        this.watch = this.config.watch || false;\n        this.runtime = this.config.runtime || false;\n        this.port = (this.config.server || { port: 4003 }).port || 4003;\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class PYIArgs extends PYIArgsOption {\n\n    public static _this: PYIArgs;\n    public static register(): PYIArgs {\n        if (!PYIArgs._this) { PYIArgs._this = new PYIArgs(); }\n        return PYIArgs._this;\n    }\n\n    public static reflact() {\n        return PYIArgs.register();\n    }\n\n    public static reset(config: AppConfigOption) {\n        return PYIArgs._this.config = config;\n    }\n\n    constructor() {\n        super();\n        args.option('mode', 'The application running type, default is development [development, production, ${your mode}]', 'development')\n            .option('watch', 'The application running watch, default false', false)\n            .option('port', 'The application listen port, default app config or 4003', 4003)\n            .option('runtime', 'The application runing build to es5 .', false);\n\n        const { mode, watch, port, runtime } = args.parse(process.argv);\n        this.mode = mode;\n        this.port = port;\n        this.watch = Boolean(watch);\n        this.runtime = Boolean(runtime);\n        this.config.server.port = this.port;\n        this.config.mode = this.mode;\n        this.config.watch = this.watch;\n        this.config.runtime = this.runtime;\n    }\n}\n"]}