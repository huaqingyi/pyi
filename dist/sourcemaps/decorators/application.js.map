{"version":3,"sources":["decorators/application.ts"],"names":[],"mappings":"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","file":"../../decorators/application.js","sourcesContent":["import { PYICore, PYICoreClass, PYIApp } from '../core/pyi';\nimport { isFunction, map, find } from 'lodash';\nimport { dirname } from 'path';\nimport chokidar from 'chokidar';\nimport { FactoryComponent } from '../factory';\nimport { PYIController } from './controller';\nimport { bgWhite, red, gray } from 'colors';\nimport { get } from 'node-emoji';\nimport { PYIAppConfiguration } from './configuration';\nimport { statSync } from 'fs';\nimport Koa from 'koa';\n\nexport class PYIApplication extends Koa implements PYIApp {\n    [x: string]: any;\n    public static __proto__: any;\n    public static _i: PYIApplication;\n\n    public static _root(): PYIApp {\n        return PYICore;\n    }\n\n    public static _base() {\n        return PYIApplication;\n    }\n\n    public static _extends() {\n        return this.__proto__;\n    }\n\n    public static _singleton(...props: any) {\n        if (!this._i) {\n            this._i = new this();\n        }\n        return this._i;\n    }\n\n    public source!: string | string[];\n    public diresource: string[];\n    public comps: PYIApp[];\n    public config: PYIAppConfiguration;\n    public readonly path!: string;\n\n    constructor() {\n        super();\n        if (!this.source) { this.source = '.'; }\n        this.diresource = [];\n        this.comps = [];\n        this.config = new PYIAppConfiguration();\n        this.mode = 'development';\n        if (process.env.NODE_ENV) { this.mode = process.env.NODE_ENV; }\n    }\n\n    public _input(...props: any): PYIApp | Promise<PYIApp> {\n        return this;\n    }\n\n    public _output(...props: any): PYIApp | Promise<PYIApp> {\n        return Promise.resolve(this[this.mode]).then(async (action) => {\n            // tslint:disable-next-line: no-unused-expression\n            action && await action.apply(this);\n            return await this;\n        });\n    }\n\n    /**\n     * import files components\n     */\n    public async configrationInit() {\n        const factorys: FactoryComponent[] = [];\n        await Promise.all(map(this.comps, async (comp: any, i: number) => {\n            const { _base } = await comp;\n\n            /**\n             * search components have @autoconnect | @autowired prototype\n             */\n            await Promise.all(map(comp.prototype, async (prototype) => {\n                if (prototype && prototype._base && prototype._base() === FactoryComponent) {\n                    prototype._input(comp);\n                    factorys.push(prototype);\n                }\n                return await prototype;\n            }));\n\n            if (_base && _base() === PYIController) { this.config.controllers.push(comp); }\n            return await comp;\n        }));\n\n        await this.factoryComponent(factorys);\n        return await this.config;\n    }\n\n    public async factoryComponent(factorys: FactoryComponent[]) {\n        const fs: FactoryComponent[] = [];\n        await Promise.all(map(factorys, async (factory) => {\n            if (find(factorys, ({ target }) => {\n                return target === factory.component;\n            })) {\n                await fs.push(factory);\n            } else {\n                await factory._output();\n            }\n            return factory;\n        }));\n        if (fs.length > 0) { await this.factoryComponent(fs); }\n        return await factorys;\n    }\n\n    public async addFile(path: string) {\n        let comp: any = {};\n        try {\n            comp = await import(path);\n            // tslint:disable-next-line:no-empty\n        } catch (err) {\n            console.log(bgWhite(`${get('no_entry')}  ${red(err)}`));\n        }\n\n        if (!comp) { return false; }\n        await Promise.all(map(comp, async (o) => {\n            if (!o || !o.prototype) { return await o; }\n            o.prototype.mode = await this.mode;\n            o.path = path;\n            const { _base } = await o;\n            if (_base && _base() === PYIAppConfiguration) {\n                this.config = await o._singleton()._output();\n                if (!this.config.controllers) { this.config.controllers = []; }\n            }\n            await this.comps.push(o);\n            return await o;\n        }));\n        console.log(`${get('kiss')}  ${gray(`ready ${path} has been added ...`)}`);\n        return await this.comps;\n    }\n\n    public setResource(source: string | string[]) {\n        this.source = source;\n    }\n\n    public async create() {\n        console.log('create ...');\n        await new Promise((r) => chokidar.watch(this.source as any, {\n            ignored: (src: string) => {\n                const isCompile = /[^\\.d]\\.(ts|js|tsx|jsx)$/gi.test(src);\n                return (!isCompile) && statSync(src).isFile();\n            }\n        }).on('add', (path) => {\n            this.diresource.push(path);\n        }).on('ready', r));\n        return this;\n    }\n\n    public async bootstrap() {\n        console.log('bootstrap ...');\n        await Promise.all(map(this.diresource, async (path) => {\n            return await this.addFile(path);\n        }));\n\n        await this.configrationInit();\n\n        console.log(this.config.controllers);\n    }\n}\n\nexport function PYIBootstrap<V extends PYICoreClass<PYIApplication>>(props: V): V;\nexport function PYIBootstrap<Props = string | string[]>(\n    paths: Props\n): <V extends PYICoreClass<PYIApplication>>(props: V) => V;\nexport function PYIBootstrap(props: any) {\n    const base = props && props._base && isFunction(props._base) && props._base();\n    if (base === PYIApplication) {\n        props.prototype.source = dirname(process.argv[1]);\n        return props;\n    }\n\n    return (target: PYICoreClass<PYIApplication>) => {\n        props.prototype.source = props;\n        return target;\n    };\n}\n"]}