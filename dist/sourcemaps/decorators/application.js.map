{"version":3,"sources":["decorators/application.ts"],"names":[],"mappings":"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","file":"../../decorators/application.js","sourcesContent":["import { PYIAppConfiguration } from './configuration';\nimport { PYICore, PYIApp, PYICoreClass, PYIPlugins } from '../core';\nimport Koa, { DefaultState, DefaultContext } from 'koa';\nimport { createExecutor, KoaDriver } from '../extends';\nimport { Compile } from '../core/compile';\nimport { blue, green } from 'colors';\nimport { get } from 'node-emoji';\nimport { HttpLogger } from '../plugins/http.logger';\nimport { Signale } from 'signale';\n\n// tslint:disable-next-line:no-empty-interface\nexport interface PYIOnInit {\n    onInit: () => any;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface PYIOnScanInit {\n    onScanInit: () => any;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface PYIOnScanChange {\n    onScanChange: () => any;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface PYIOnScanAfter {\n    onScanAfter: () => any;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface PYIOnConfigurationInit {\n    onConfigurationInit: () => any;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface PYIOnConfigurationAfter {\n    onConfigurationAfter: (config: PYIAppConfiguration) => any;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface PYIOnInitApplication {\n    onInitApplication: () => any;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface PYIOnPluginApplication {\n    onPluginApplication: (plugins: PYICoreClass<PYIPlugins>) => any;\n}\n\nexport type PYIApplicationClass<V> = (new (...args: any[]) => V & PYIApplication) & typeof PYIApplication;\n\nexport function PYIBootstrap<VC extends PYIApplicationClass<PYIApplication>>(tprops: VC): VC;\nexport function PYIBootstrap<Props = any>(\n    props: Props & any\n): <VC extends PYIApplicationClass<PYIApplication>>(target: VC) => VC;\nexport function PYIBootstrap(props: any | PYIApp) {\n    let mode: string = 'development';\n    if (process.env.NODE_ENV) { mode = process.env.NODE_ENV; }\n    if (props._base && props._base() === PYIApplication) {\n        props.prototype.mode = mode;\n        return props;\n    }\n    return (target: PYIApp) => {\n        target.prototype.props = props;\n        return target;\n    };\n}\n\nexport class PYIApplication<\n    StateT = DefaultState,\n    CustomT = DefaultContext\n    > extends Koa<StateT, CustomT> {\n    [x: string]: any;\n    public static __proto__: any;\n\n    public static _pyi() {\n        return {};\n    }\n\n    public static _root(): PYIApp {\n        return PYICore;\n    }\n\n    public static _base(): PYIApp {\n        return PYIApplication;\n    }\n\n    public static _extends() {\n        return this.__proto__;\n    }\n\n    public static _pyiruntime() {\n        return this;\n    }\n\n    public static _connect() {\n        if (!this._this) {\n            this._this = new this();\n        }\n        return this._this;\n    }\n\n    protected static _this: PYIApplication;\n    public mode!: string;\n    public props?: any;\n    public config!: PYIAppConfiguration;\n    public compile: Compile;\n    public logger: Signale;\n    private _bootstrap: () => any;\n    private ready?: (value?: any | PromiseLike<any>) => void;\n\n    constructor() {\n        super();\n        this.logger = new Signale();\n        // tslint:disable-next-line:no-unused-expression\n        this.compile = new Compile(this);\n        this.run();\n        // tslint:disable-next-line:no-empty\n        this._bootstrap = () => { };\n    }\n\n    public async bootstrap(callback: () => any) {\n        this._bootstrap = callback;\n        return await new Promise((r) => {\n            this.ready = r;\n        });\n    }\n\n    public async starter() {\n        this.listen(this.config.port, this.config.host, () => {\n            console.log(`${get('kiss')}  ${blue(\n                `application running for http://${this.config.host}:${this.config.port}`\n            )}`);\n        });\n    }\n\n    private async run() {\n        console.log(`${get('rocket')}  ${green(`application onInit runtime ...`)}`);\n        // tslint:disable-next-line:no-unused-expression\n        this.onInit && await this.onInit();\n\n        console.log(`${get('rocket')}  ${green(`application scan project ...`)}`);\n        // tslint:disable-next-line:no-unused-expression\n        this.onScanInit && await this.onScanInit();\n        const { config } = await this.compile.scanProject(async (file) => {\n            console.log(`${get('rainbow')}  ${green(`application scan change components ...`)}`);\n            // tslint:disable-next-line:no-unused-expression\n            this.onScanChange && await this.onScanChange(file);\n        });\n\n        console.log(`${get('rocket')}  ${green(`application scan project config ...`)}`);\n        // tslint:disable-next-line:no-unused-expression\n        this.onConfigurationInit && await this.onConfigurationInit();\n\n        this.config = await this.compile.configrationInit(config);\n        this.logger = new Signale(this.config.debugOptions || {});\n        console.log(`${get('rocket')}  ${green(`application scan project config success ...`)}`);\n        // tslint:disable-next-line:no-unused-expression\n        this.onConfigurationAfter && await this.onConfigurationAfter();\n        const driver = new KoaDriver(this);\n        await createExecutor(driver, {\n            ...this.config as any, development: this.mode === 'development'\n        });\n        console.log(`${get('rocket')}  ${green(`application scan project init success ...`)}`);\n        // tslint:disable-next-line:no-unused-expression\n        this.onInitApplication && await this.onInitApplication();\n\n        // tslint:disable-next-line:no-empty\n        const isPlugins: (plugins: PYICoreClass<PYIPlugins>) => any = this.onPluginApplication || (() => { });\n\n        // // tslint:disable-next-line:no-unused-expression\n        // this.onPluginApplication && await this.onPluginApplication(HttpLogger);\n        if (await isPlugins(HttpLogger) !== false) {\n            const logger = new HttpLogger(this);\n            await logger.init();\n        }\n        // tslint:disable-next-line:no-unused-expression\n        this.ready && await this.ready(this);\n        await this._bootstrap();\n    }\n}\n"]}