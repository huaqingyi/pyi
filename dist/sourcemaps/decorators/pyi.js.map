{"version":3,"sources":["decorators/pyi.ts"],"names":[],"mappings":";;;;;AAAA,gCAA8C;AAC9C,8CAA8B;AAC9B,+BAAmD;AACnD,8CAAwC;AAcxC;;GAEG;AACH,MAAsB,cAAe,SAAQ,aAAW;IA4BpD;QAAgB,KAAK,EAAE,CAAC;IAAC,CAAC;IAtBnB,MAAM,CAAC,IAAI;QACd,OAAO,EAAE,CAAC;IACd,CAAC;IAEM,MAAM,CAAC,QAAQ;QAClB,OAAO,cAAc,CAAC;IAC1B,CAAC;IAEM,MAAM,CAAC,IAAI,CAAC,IAAc;QAC7B,OAAO,CAAC,CAAC;IACb,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,OAAO,CAAC,WAAmB;QACrC,cAAc,CAAC,QAAQ,GAAG,CAAC,IAAI,sBAAe,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACtF,iBAAW,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAIM,KAAK,CAAC,OAAO,CAAC,QAA4F;QAC7G,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;;AAhCL,wCAiCC;AA7BiB,4BAAa,GAAY,IAAI,CAAC;AA+BhD;;;;GAIG;AACH,SAAgB,YAAY,CAAC,MAAW,EAAE,GAAY;IAClD,aAAO,CAAC,QAAQ,EAAE,CAAC;IACnB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC1B,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAChC,CAAC;AAJD,oCAIC","file":"../../decorators/pyi.js","sourcesContent":["import { PYIChokidar, PYIArgs } from '../lib';\nimport Application from 'koa';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { AppConfigOption } from '../config';\nimport { FSWatcher } from 'chokidar';\nimport { Socket } from 'net';\n\nexport interface PYIApplicationHook {\n    addComponent?: (comp: any) => Promise<any>;\n    didLoadAllComponent?: (comp: any) => any;\n    didLoadConfig?: (config: AppConfigOption) => AppConfigOption;\n    didInitApp?: (app: Application) => any;\n    didRunApp?: (err?: any) => any;\n    connection?: (sock: Socket, app: any) => any;\n}\n\n/**\n * base mian\n */\nexport abstract class PYIApplication extends Application {\n\n    public static complete: Observable<any>;\n\n    public static isApplication: boolean = true;\n\n    public static _pyi() {\n        return {};\n    }\n\n    public static _extends() {\n        return PYIApplication;\n    }\n\n    public static main(args: string[]): any {\n        return 0;\n    }\n\n    /**\n     * runtime bootstrap\n     * @param projectpath application path\n     * @param args cmd args\n     */\n    public static runtime(projectpath: string) {\n        PYIApplication.complete = (new BehaviorSubject(null)).pipe(filter((o) => o !== null));\n        PYIChokidar.runtime(projectpath, this);\n    }\n\n    constructor() { super(); }\n\n    public async runtime(callback: (props: { starter: Function, config: AppConfigOption, watcher: FSWatcher }) => any) {\n        PYIApplication.complete.subscribe(callback);\n    }\n}\n\n/**\n * application main class\n * @param target application bootstrap classes(启动类)\n * @param key off\n */\nexport function PYIBootstrap(target: any, key?: string) {\n    PYIArgs.register();\n    target.main(process.argv);\n    target.runtime.bind(target);\n}\n"]}