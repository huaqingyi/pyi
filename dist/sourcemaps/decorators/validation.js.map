{"version":3,"sources":["decorators/validation.ts"],"names":[],"mappings":";;AAAA,mCAAyC;AACzC,kCAAkC;AAClC,qDAA4D;AAC5D,2CAAsD;AAEtD,SAAgB,UAAU,CAAC,MAAW;IAClC,4BAA4B;IAC5B,iEAAiE;IACjE,IAAI;IACJ,OAAO,MAAM,CAAC;AAClB,CAAC;AALD,gCAKC;AAED,SAAgB,YAAY,CAAC,MAA2B,EAAE,GAAW;IACjE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;QACjB,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;KACvB;IACD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,OAAO,MAAM,CAAC,OAAO,CAAC;AAC1B,CAAC;AAND,oCAMC;AAOD,MAAsB,aAA0B,SAAQ,cAAO;IAGpD,MAAM,CAAC,KAAK;QACf,OAAO,aAAa,CAAC;IACzB,CAAC;IAIM,KAAK,CAAC,QAAQ;QACjB,OAAO,MAAM,0BAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACxC,wCAAwC;YACxC,qCAAqC;YACrC,iEAAiE;YACjE,gDAAgD;YAChD,4BAA4B;YAC5B,YAAY;YACZ,uBAAuB;YACvB,QAAQ;YACR,mBAAmB;YACnB,MAAM;YACN,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBAAE,OAAO,MAAM,CAAC;aAAE;YAClE,OAAO,eAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE;gBAC1B,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,gBAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACzE,OAAO,KAAK,CAAC;iBAChB;gBACD,OAAO,IAAI,CAAC;YAChB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,MAAyB;QACnC,OAAO,wBAAY,CAAC;YAGT,KAAK,CAAC,MAAM;gBACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC9C,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5C,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;CACJ;AA1CD,sCA0CC","file":"../../decorators/validation.js","sourcesContent":["import { filter, isEmpty } from 'lodash';\nimport { PYICore } from '../core';\nimport { validate, ValidationError } from 'class-validator';\nimport { PYIExecption, PYIThrows } from './execption';\n\nexport function Validation(target: any) {\n    // const { _root } = target;\n    // if (_root && isFunction(_root) && _root() === PYIValidation) {\n    // }\n    return target;\n}\n\nexport function IsNotEmptyIf(target: any & PYIValidation, key: string) {\n    if (!target._ignore) {\n        target._ignore = [];\n    }\n    target._ignore.push(key);\n    return target._ignore;\n}\n\nexport interface PYIValidationImpl {\n    validate: () => any;\n    throws: (errors: ValidationError[]) => any;\n}\n\nexport abstract class PYIValidation<Props = {}> extends PYICore implements PYIValidationImpl {\n    public static swaggerDocument: any;\n\n    public static _root() {\n        return PYIValidation;\n    }\n\n    public _ignore?: string[];\n\n    public async validate() {\n        return await validate(this).then((errors) => {\n            // if (!this._ignore) { return errors; }\n            // return filter(errors, (error) => {\n            //     if ((this._ignore || []).indexOf(error.property) !== -1) {\n            //         if (validator.isEmpty(error.value)) {\n            //             return false;\n            //         }\n            //         return true;\n            //     }\n            //     return true;\n            // });\n            if (!this._ignore || this._ignore.length === 0) { return errors; }\n            return filter(errors, (err) => {\n                if ((this._ignore || []).indexOf(err.property) !== -1 && isEmpty(err.value)) {\n                    return false;\n                }\n                return true;\n            });\n        });\n    }\n\n    public throws(errors: ValidationError[]) {\n        return PYIExecption(class implements PYIThrows {\n            public errno!: number;\n            public errmsg!: string;\n            public async throws() {\n                this.errno = 1007;\n                this.errmsg = JSON.stringify(errors, null, 4);\n                throw new Error(JSON.stringify(errors));\n            }\n        });\n    }\n}\n"]}