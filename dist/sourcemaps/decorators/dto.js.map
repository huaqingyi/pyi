{"version":3,"sources":["decorators/dto.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,kCAAwD;AACxD,mCAA6B;AAM7B,SAAgB,GAAG,CAAoB,KAAY;IAC/C,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,MAAM,EAAE;QACzC,OAAO,KAAK,CAAC;KAChB;SAAM;QACH,OAAO,CAAC,MAAc,EAAE,EAAE;YACtB,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;YAC/B,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC;KACL;AACL,CAAC;AATD,kBASC;AAOD,MAAa,MAAoB,SAAQ,cAAO;IACrC,MAAM,CAAC,KAAK;QACf,OAAO,MAAM,CAAC;IAClB,CAAC;IAMM,MAAM,CAAC,MAAa;QACvB,OAAO,CAAC,GAAG,CAAC,YAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;CACJ;AAZD,wBAYC;AAGD,IAAa,WAAW,GAAxB,MAAa,WAAY,SAAQ,MAAM;IAMnC,YAAY,IAAS;QACjB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IAEM,MAAM,CAAC,MAAa;QACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,QAAQ,MAAM,CAAC,IAAI,EAAE;YACjB;gBACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC7B,OAAO,IAAI,CAAC;SACnB;IACL,CAAC;CACJ,CAAA;AArBY,WAAW;IADvB,GAAG;;GACS,WAAW,CAqBvB;AArBY,kCAAW","file":"../../decorators/dto.js","sourcesContent":["import { PYICore, PYIApp, PYICoreClass } from '../core';\nimport { red } from 'colors';\n\nexport function Dto<VC extends PYICoreClass<PYIDto>>(tprops: VC): VC;\nexport function Dto<Props = any>(\n    props: Props & any\n): <VC extends PYICoreClass<PYIDto>>(target: VC) => VC;\nexport function Dto<Props extends any>(props: Props) {\n    if (props._base && props._base() === PYIDto) {\n        return props;\n    } else {\n        return (target: PYIApp) => {\n            target.prototype.props = props;\n            return target;\n        };\n    }\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface PYIDtoThrows {\n    throws: (errors: Error) => any;\n}\n\nexport class PYIDto<Props = any> extends PYICore implements PYIDtoThrows {\n    public static _base(): PYIApp {\n        return PYIDto;\n    }\n\n    public props!: Props;\n\n    public data: any;\n\n    public throws(errors: Error) {\n        console.log(red(JSON.stringify(errors)));\n    }\n}\n\n@Dto\nexport class ResponseDto extends PYIDto {\n    public data: any;\n    public success: boolean;\n    public errcode?: number;\n    public errmsg?: string;\n\n    constructor(data: any) {\n        super();\n        this.data = data;\n        this.success = true;\n    }\n\n    public throws(errors: Error) {\n        this.success = false;\n        switch (errors.name) {\n            default:\n                this.errcode = 1010;\n                this.errmsg = errors.message;\n                return this;\n        }\n    }\n}\n"]}