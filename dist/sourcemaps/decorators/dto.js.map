{"version":3,"sources":["decorators/dto.ts"],"names":[],"mappings":";;AAAA,kCAAkC;AAClC,mCAAgC;AAEhC,MAAsB,MAAO,SAAQ,cAAO;IAWxC,YAAY,IAAU;QAClB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;QACpB,6EAA6E;IACjF,CAAC;IAfM,MAAM,CAAC,KAAK;QACf,OAAO,MAAM,CAAC;IAClB,CAAC;IAeM,KAAK,CAAC,MAAM,CAAC,GAAU,EAAE,KAAc,EAAE,MAAe;QAC3D,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC;QAC3B,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,eAAM,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACxF,sBAAsB;SACzB;aAAM;YACH,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;SACpF;QACD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAhCD,wBAgCC;AAED,gDAAgD;AAChD,MAAa,OAAQ,SAAQ,MAAM;CAGlC;AAHD,0BAGC;AAED,SAAgB,GAAG,CAAqB,MAAiB,EAAE,GAAY;IACnE,8BAA8B;AAClC,CAAC;AAFD,kBAEC","file":"../../decorators/dto.js","sourcesContent":["import { PYICore } from '../core';\nimport { yellow } from 'colors';\n\nexport abstract class PYIDto extends PYICore {\n    public static _pyi: () => any;\n    public static _root() {\n        return PYIDto;\n    }\n\n    public err?: boolean;\n    public errno?: number;\n    public errmsg?: string;\n    public data: any;\n\n    constructor(data?: any) {\n        super();\n        this.err = false;\n        this.data = data || {};\n        this.app.dto = true;\n        // if (this.ctx && this.ctx.app) { this.ctx.app.emit('vo', true, this.ctx); }\n    }\n\n    public async throws(err: Error, errno?: number, errmsg?: string) {\n        this.err = true;\n        this.errno = errno || 1003;\n        if (errmsg) {\n            this.errmsg = errmsg;\n            console.log(yellow(`${err.name}: ${err.message} ${err.stack ? `(${err.stack})` : ''}`));\n            // console.error(err);\n        } else {\n            this.errmsg = `${err.name}: ${err.message} ${err.stack ? `(${err.stack})` : ''}`;\n        }\n        this.data = {};\n        return this;\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class PYIGDto extends PYIDto {\n    public err!: boolean;\n    public data!: any;\n}\n\nexport function Dto<UsePYIDto = PYIDto>(target: UsePYIDto, key?: string) {\n    // console.log('dto', target);\n}\n"]}