{"version":3,"sources":["decorators/plugins.ts"],"names":[],"mappings":";;AAAA,kCAA2D;AAU3D,SAAgB,UAAU,CAAoB,KAAY;IACtD,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,SAAS,EAAE;QAC5C,OAAO,KAAK,CAAC;KAChB;SAAM;QACH,OAAO,CAAC,MAAc,EAAE,EAAE;YACtB,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;YAC/B,OAAO,MAAM,CAAC;QAClB,CAAC,CAAC;KACL;AACL,CAAC;AATD,gCASC;AAED,MAAa,SAAuB,SAAQ,iBAAU;IAC3C,MAAM,CAAC,KAAK;QACf,OAAO,SAAS,CAAC;IACrB,CAAC;CAGJ;AAND,8BAMC","file":"../../decorators/plugins.js","sourcesContent":["import { PYIApp, PYICoreClass, PYIPlugins } from '../core';\n\nexport interface PYIPluginProps {\n    priority?: number;\n}\n\nexport function AutoPlugin<VC extends PYICoreClass<PYIPlugin>>(tprops: VC): VC;\nexport function AutoPlugin<Props = PYIPluginProps>(\n    props: Props & PYIPluginProps\n): <VC extends PYICoreClass<PYIPlugin>>(target: VC) => VC;\nexport function AutoPlugin<Props extends any>(props: Props) {\n    if (props._base && props._base() === PYIPlugin) {\n        return props;\n    } else {\n        return (target: PYIApp) => {\n            target.prototype.props = props;\n            return target;\n        };\n    }\n}\n\nexport class PYIPlugin<Props = any> extends PYIPlugins {\n    public static _base() {\n        return PYIPlugin;\n    }\n\n    public props!: Props;\n}\n"]}