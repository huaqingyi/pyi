{"version":3,"sources":["decorators/controller.ts"],"names":[],"mappings":";;;AAAA,kCAAgD;AAChD,+BAAkC;AAElC;;GAEG;AACH,IAAY,oBAMX;AAND,WAAY,oBAAoB;IAC5B,mCAAW,CAAA;IACX,qCAAa,CAAA;IACb,yCAAiB,CAAA;IACjB,mCAAW,CAAA;IACX,uCAAe,CAAA;AACnB,CAAC,EANW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAM/B;AAYD,MAAa,aAAc,SAAQ,cAAO;IAC/B,MAAM,CAAC,KAAK;QACf,OAAO,aAAa,CAAC;IACzB,CAAC;IAEM,KAAK;QACR,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAZD,sCAYC;AAUD,SAAgB,UAAU,CAAC,KAAU;IACjC,MAAM,IAAI,GAAG,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,iBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;IAC9E,IAAI,IAAI,KAAK,aAAa,EAAE;QACxB,OAAO,KAAK,CAAC;KAChB;IACD,OAAO,CAAC,MAAmC,EAAE,EAAE;QAC3C,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACN,CAAC;AARD,gCAQC;AAMD,SAAgB,cAAc,CAAC,KAAU,EAAE,MAAe;IACtD,IAAI,MAAM,EAAE;QACR,OAAO,KAAK,CAAC;KAChB;IACD,OAAO,CAAC,MAAqB,EAAE,OAAe,EAAE,EAAE;QAC9C,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACN,CAAC;AAPD,wCAOC","file":"../../decorators/controller.js","sourcesContent":["import { PYICore, PYICoreClass } from '../core';\nimport { isFunction } from 'util';\n\n/**\n * Controller ================================\n */\nexport enum RequestMappingMethod {\n    GET = 'GET',\n    POST = 'POST',\n    DELETE = 'DELETE',\n    PUT = 'PUT',\n    PATCH = 'PATCH'\n}\n\nexport interface ControllerConfiguration {\n    prefix?: string;\n    auto?: boolean;\n}\n\nexport interface ControllerRequestConfiguration extends ControllerConfiguration {\n    prefix?: string;\n    methods?: string[] | RequestMappingMethod[];\n}\n\nexport class PYIController extends PYICore {\n    public static _base() {\n        return PYIController;\n    }\n\n    public input() {\n        return this;\n    }\n\n    public output() {\n        return this;\n    }\n}\n\n/**\n * Extends for routing-controllers JsonController\n * @param config extends routing-controllers config(继承于 routing-controllers 参数)\n */\nexport function Controller<V extends PYICoreClass<PYIController>>(target: V): V;\nexport function Controller(\n    config: ControllerConfiguration,\n): <V extends PYICoreClass<PYIController>>(target: V) => V;\nexport function Controller(props: any) {\n    const base = props && props._base && isFunction(props._base) && props._base();\n    if (base === PYIController) {\n        return props;\n    }\n    return (target: PYICoreClass<PYIController>) => {\n        return target;\n    };\n}\n\nexport function RequestMapping(target: PYIController, method: string): TypedPropertyDescriptor<() => any>;\nexport function RequestMapping(\n    config: ControllerRequestConfiguration\n): (target: PYIController, method: string) => TypedPropertyDescriptor<() => any>;\nexport function RequestMapping(props: any, method?: string) {\n    if (method) {\n        return props;\n    }\n    return (target: PYIController, kmethod: string) => {\n        return target;\n    };\n}\n"]}