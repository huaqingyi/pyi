{"version":3,"sources":["decorators/controller.ts"],"names":[],"mappings":"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","file":"../../decorators/controller.js","sourcesContent":["import { isFunction, map } from 'lodash';\nimport { PYICore } from '../core';\nimport {\n    JsonController, Method,\n    Middleware as RMiddleware,\n    Interceptor as RInterceptor,\n    Body as RBody,\n    BodyOptions\n} from 'routing-controllers';\nimport { ActionType } from 'routing-controllers/metadata/types/ActionType';\nimport { throws, PYIExecption, PYIThrows } from './execption';\nimport { ValidationError } from 'class-validator';\n\nexport * from 'routing-controllers';\n\n/**\n * Controller ================================\n */\nexport enum RequestMappingMethod {\n    GET = 'GET',\n    POST = 'POST',\n    DELETE = 'DELETE',\n    PUT = 'PUT',\n    PATCH = 'PATCH'\n}\n\nexport interface ControllerConfiguration {\n    prefix?: string;\n}\n\nexport interface ControllerRequestConfiguration extends ControllerConfiguration {\n    prefix?: string;\n    methods?: string[] | RequestMappingMethod[];\n}\n\nexport abstract class PYIController extends PYICore {\n    public static _pyi: () => any;\n    public static _root() {\n        return PYIController;\n    }\n}\n\n/**\n * Extends for routing-controllers JsonController\n * @param config extends routing-controllers config(继承于 routing-controllers 参数)\n */\nexport function Controller<Props = ControllerConfiguration | PYIController>(config: Props): any {\n    if (isFunction(config)) {\n        JsonController(undefined)(config as any);\n    } else {\n        return (target: any, key?: string) => {\n            const { prefix } = config as ControllerConfiguration;\n            JsonController(prefix ? prefix : undefined)(target);\n        };\n    }\n}\n\nexport function RequestMapping(config: ControllerRequestConfiguration | PYIController, key?: string): any {\n    if (key) {\n        map(RequestMappingMethod, (m) => {\n            Method(m as any, undefined)(config, key);\n        });\n        return throws(config, key);\n    } else {\n        // tslint:disable-next-line:no-shadowed-variable\n        return (target: any, key: string) => {\n            const { prefix, methods } = config as ControllerRequestConfiguration;\n            map(methods && methods.length > 0 ? methods : RequestMappingMethod, (m) => {\n                Method(m as ActionType, prefix)(target, key);\n            });\n            return throws(target, key);\n        };\n    }\n}\n\n/**\n * Middleware ===============================================\n */\n\n// tslint:disable-next-line:max-classes-per-file\nexport abstract class PYIMiddleware extends PYICore {\n    public static _pyi: () => any;\n    public static _root() {\n        return PYIMiddleware;\n    }\n}\n\n/**\n * Extends for routing-controllers middleware\n * @param options extends routing-controllers middleware\n */\nexport function Middleware(\n    options: {\n        type: 'after' | 'before';\n        priority?: number;\n    }\n) {\n    return (target: any, key?: string) => {\n        RMiddleware(options)(target);\n    };\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport abstract class PYIInterceptor extends PYICore {\n    public static _pyi: () => any;\n    public static _root() {\n        return PYIInterceptor;\n    }\n\n    constructor(...props: any) { super(); }\n}\n\n/**\n * Extends for routing-controllers Interceptor\n * @param options extends routing-controllers Interceptor\n */\nexport function Interceptor(options?: { priority?: number; }) {\n    return (target: any, key?: string) => {\n        RInterceptor(options)(target);\n    };\n}\n\nexport function Body(options: BodyOptions) {\n    return (target: any, key: string, idx: number) => {\n        RBody({ ...options, validate: false })(target, key, idx);\n        const fn = target[key];\n        // tslint:disable-next-line:only-arrow-functions\n        target[key] = function(...args: any[]) {\n            const valid = args[idx];\n            return valid.validate().then((errors: ValidationError[]) => {\n                if (options.validate === true) {\n                    if (errors.length === 0) { return fn(...args); }\n                    return valid.throws.apply(this, errors);\n                } else {\n                    return fn(...args, errors);\n                }\n            });\n        };\n        return target[key];\n    };\n}\n"]}