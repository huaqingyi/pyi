{"version":3,"sources":["decorators/component.ts"],"names":[],"mappings":";;AAAA,mCAAoC;AACpC,kCAAkC;AAClC,mDAAgF;AAEhF;;GAEG;AACH,MAAsB,YAAyB,SAAQ,cAAO;IAO1D,YAAY,GAAG,KAAU,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC;IANhC,MAAM,CAAC,KAAK;QACf,OAAO,YAAY,CAAC;IACxB,CAAC;CAKJ;AARD,oCAQC;AAED,SAAgB,SAAS,CAAc,MAAa;IAChD,MAAM,EAAE,KAAK,EAAE,GAAI,MAAc,CAAC;IAClC;;OAEG;IACH,IAAI,KAAK,IAAI,mBAAU,CAAC,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,YAAY,EAAE;QACxD,OAAO,MAAM,CAAC;KACjB;SAAM;QACH;;WAEG;QACH,OAAO,CAAC,MAAW,EAAE,GAAY,EAAE,EAAE;YACjC,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC;QACpC,CAAC,CAAC;KACL;AACL,CAAC;AAfD,8BAeC;AAED;;;;GAIG;AACH,SAAgB,SAAS,CAAC,MAAW,EAAE,GAAW;IAC9C;;OAEG;IACH,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE;QAAE,MAAM,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;KAAE;IACvE;;OAEG;IACH,MAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;IAC/D;;OAEG;IACH,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE;QAC1C,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC;QACnC,IAAI,QAAQ,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;QACjC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;QAC7C,IAAI,MAAM,CAAC,KAAK,IAAI,mBAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC1C,IACI,MAAM,CAAC,KAAK,EAAE,KAAK,oCAAoB;gBACvC,MAAM,CAAC,KAAK,EAAE,KAAK,uCAAuB,EAC5C;gBACE,CAAC,KAAK,IAAI,EAAE;oBACR,QAAQ,GAAG,MAAM,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACrC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,MAAM,QAAQ,CAAC;gBACvD,CAAC,CAAC,EAAE,CAAC;aACR;SACJ;KACJ;SAAM;QACH;;WAEG;QACH,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,MAAM,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC;gBAC7B,GAAG,IAAI;gBACP,SAAS,EAAE;oBACP,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;oBACzB,GAAG;iBACN;aACJ,CAAC,CAAC;SACN;KACJ;AACL,CAAC;AA1CD,8BA0CC","file":"../../decorators/component.js","sourcesContent":["import { isFunction } from 'lodash';\nimport { PYICore } from '../core';\nimport { PYIAutoConfiguration, PYIAutoAppConfiguration } from './configuration';\n\n/**\n * Component base\n */\nexport abstract class PYIComponent<Props = {}> extends PYICore {\n    public static _root() {\n        return PYIComponent;\n    }\n\n    public props!: Props;\n\n    constructor(...props: any) { super(); }\n}\n\nexport function Component<Props = any>(config: Props): any {\n    const { _root } = (config as any);\n    /**\n     * 如果是直接修饰类\n     */\n    if (_root && isFunction(_root) && _root() === PYIComponent) {\n        return config;\n    } else {\n        /**\n         * 带参数的修饰\n         */\n        return (target: any, key?: string) => {\n            target.prototype.props = config;\n        };\n    }\n}\n\n/**\n * 自动注入类\n * @param target classes(主类)\n * @param key prototype(键)\n */\nexport function autowired(target: any, key: string) {\n    /**\n     * 容错\n     */\n    if (!target.constructor._pyi) { target.constructor._pyi = () => ({}); }\n    /**\n     * 获取注入类\n     */\n    const params = Reflect.getMetadata('design:type', target, key);\n    /**\n     * 是否嵌套依赖\n     */\n    if (!params._pyi || !params._pyi().autowired) {\n        const { props } = params.prototype;\n        let instance = new params(props);\n        target.constructor.prototype[key] = instance;\n        if (params._root && isFunction(params._root)) {\n            if (\n                params._root() === PYIAutoConfiguration ||\n                params._root() === PYIAutoAppConfiguration\n            ) {\n                (async () => {\n                    instance = await instance._runtime();\n                    target.constructor.prototype[key] = await instance;\n                })();\n            }\n        }\n    } else {\n        /**\n         * 嵌套依赖\n         */\n        const _pyi = target.constructor._pyi();\n        if (!_pyi.autowired) {\n            target.constructor._pyi = () => ({\n                ..._pyi,\n                autowired: [\n                    ...(_pyi.autowired || []),\n                    key\n                ]\n            });\n        }\n    }\n}\n"]}