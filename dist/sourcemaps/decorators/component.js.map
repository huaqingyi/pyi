{"version":3,"sources":["decorators/component.ts"],"names":[],"mappings":";;AAAA,mCAAoC;AACpC,+CAA2C;AAC3C,mDAAuD;AACvD,sCAAoD;AACpD,gCAAiC;AAEjC;;GAEG;AACH,MAAsB,YAAoB,SAAQ,kBAAO;IAQrD,YAAY,GAAG,KAAU,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC;IANhC,MAAM,CAAC,QAAQ;QAClB,OAAO,YAAY,CAAC;IACxB,CAAC;CAKJ;AATD,oCASC;AAED;;;;GAIG;AACH,SAAgB,SAAS,CAAc,MAAa;IAChD,MAAM,EAAE,QAAQ,EAAE,GAAI,MAAc,CAAC;IACrC;;OAEG;IACH,IAAI,QAAQ,IAAI,mBAAU,CAAC,QAAQ,CAAC,IAAI,QAAQ,EAAE,KAAK,YAAY,EAAE;QACjE,OAAO,MAAM,CAAC;KACjB;SAAM;QACH;;WAEG;QACH,OAAO,CAAC,MAAW,EAAE,GAAY,EAAE,EAAE;YACjC,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC;QACpC,CAAC,CAAC;KACL;AACL,CAAC;AAfD,8BAeC;AAED;;;;GAIG;AACH,SAAgB,SAAS,CAAC,MAAW,EAAE,GAAW;IAC9C;;OAEG;IACH,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE;QAAE,MAAM,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;KAAE;IACvE;;OAEG;IACH,MAAM,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;IAC/D;;OAEG;IACH,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE;QAC1C,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC;QACnC,IAAI,QAAQ,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,MAAM,CAAC,QAAQ,IAAI,mBAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;YAChD,IACI,MAAM,CAAC,QAAQ,EAAE,KAAK,oCAAoB;gBAC1C,MAAM,CAAC,QAAQ,EAAE,KAAK,gCAAuB,EAC/C;gBACE,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,aAAO,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;aAC1D;SACJ;QACD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;KAChD;SAAM;QACH;;WAEG;QACH,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,MAAM,CAAC,WAAW,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC;gBAC7B,GAAG,IAAI;gBACP,SAAS,EAAE;oBACP,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;oBACzB,GAAG;iBACN;aACJ,CAAC,CAAC;SACN;KACJ;AACL,CAAC;AAvCD,8BAuCC","file":"../../decorators/component.js","sourcesContent":["import { isFunction } from 'lodash';\nimport { PYIBase } from '../core/pyi.base';\nimport { PYIAutoConfiguration } from './configuration';\nimport { PYIAutoAppConfiguration } from '../config';\nimport { PYIArgs } from '../lib';\n\n/**\n * Component base\n */\nexport abstract class PYIComponent<Props> extends PYIBase {\n    public static _pyi: () => any;\n    public static _extends() {\n        return PYIComponent;\n    }\n\n    public props?: Props;\n\n    constructor(...props: any) { super(); }\n}\n\n/**\n * This's application plugin or libs, use extends. (插件或者包, 自行扩展)\n * @param config This is contructor argv and classes props, working is auto inject.\n * (config是实例化的参数, 同时也是我们的props, 自动注入类实例.)\n */\nexport function Component<Props = any>(config: Props): any {\n    const { _extends } = (config as any);\n    /**\n     * 如果是直接修饰类\n     */\n    if (_extends && isFunction(_extends) && _extends() === PYIComponent) {\n        return config;\n    } else {\n        /**\n         * 带参数的修饰\n         */\n        return (target: any, key?: string) => {\n            target.prototype.props = config;\n        };\n    }\n}\n\n/**\n * 自动注入类\n * @param target classes(主类)\n * @param key prototype(键)\n */\nexport function autowired(target: any, key: string) {\n    /**\n     * 容错\n     */\n    if (!target.constructor._pyi) { target.constructor._pyi = () => ({}); }\n    /**\n     * 获取注入类\n     */\n    const params = Reflect.getMetadata('design:type', target, key);\n    /**\n     * 是否嵌套依赖\n     */\n    if (!params._pyi || !params._pyi().autowired) {\n        const { props } = params.prototype;\n        let instance = new params(props);\n        if (params._extends && isFunction(params._extends)) {\n            if (\n                params._extends() === PYIAutoConfiguration ||\n                params._extends() === PYIAutoAppConfiguration\n            ) {\n                instance = instance._runtime(PYIArgs.reflact().config);\n            }\n        }\n        target.constructor.prototype[key] = instance;\n    } else {\n        /**\n         * 嵌套依赖\n         */\n        const _pyi = target.constructor._pyi();\n        if (!_pyi.autowired) {\n            target.constructor._pyi = () => ({\n                ..._pyi,\n                autowired: [\n                    ...(_pyi.autowired || []),\n                    key\n                ]\n            });\n        }\n    }\n}\n"]}