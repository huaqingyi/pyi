{"version":3,"sources":["core/app.core.ts"],"names":[],"mappings":"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","file":"../../core/app.core.js","sourcesContent":["import Koa, { Context, Middleware, DefaultState, DefaultContext } from 'koa';\nimport { PYICoreApp } from './pyi.core';\nimport { PYIController, PYIMiddleware, PYIInterceptor, PYIComponent, PYIAutoAppConfiguration } from '../decorators';\nimport { green } from 'colors';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport bodyParser from 'koa-bodyparser';\nimport logger from 'koa-logger';\nimport session from 'koa-session';\n\nexport class Application<StateT = Koa.DefaultState, CustomT = Koa.DefaultContext> extends Koa implements PYICoreApp {\n    public static __proto__: any;\n\n    public static _pyi() {\n        return {};\n    }\n\n    public static _root(): PYICoreApp {\n        return Application;\n    }\n\n    public static _extends() {\n        return this.__proto__;\n    }\n\n    public static _runtime() {\n        return this;\n    }\n\n    protected static _this: Application;\n    [x: string]: any;\n    public controllers: PYIController[];\n    public middlewares: PYIMiddleware[];\n    public interceptors: PYIInterceptor[];\n    public components: PYIComponent[];\n    public config!: PYIAutoAppConfiguration;\n    public mode!: string;\n    public dto: boolean;\n    public _setup: BehaviorSubject<any>;\n    public success!: (...args: any) => any;\n    public debug!: (...args: any) => any;\n    public pending!: (...args: any) => any;\n    public fatal!: (...args: any) => any;\n    public watch!: (...args: any) => any;\n    public complete!: (...args: any) => any;\n    public error!: (...args: any) => any;\n    public ctx!: Context;\n\n    protected app!: this;\n\n    constructor() {\n        super();\n        this._setup = (new BehaviorSubject(null)).pipe(filter((v) => !!v)) as any;\n        this.controllers = [];\n        this.middlewares = [];\n        this.interceptors = [];\n        this.components = [];\n        this.dto = false;\n    }\n\n    public use<NewStateT = any, NewCustomT = any>(\n        middleware: Middleware<StateT & NewStateT, CustomT & NewCustomT>\n    ): any & Koa<StateT & NewStateT, CustomT & NewCustomT> {\n        return super.use(async (ctx, next) => {\n            this.ctx = ctx as Context;\n            return middleware.apply(this, [ctx as any, next]);\n        }) as any;\n    }\n\n    public async addUse() {\n        /**\n         * body formatter\n         */\n        await this.use(bodyParser());\n\n        /**\n         * session\n         */\n        const sconfig = { ...this.config.session };\n        if (!this.keys) { this.keys = sconfig.keys || ['pyi secret hurr']; }\n        this.config.session.keys = this.keys;\n        delete sconfig.keys;\n        await this.use(session(this.config.session as any, this));\n\n        return await this;\n    }\n\n    public async setup(app: Application, callback?: () => any) {\n        this.config.globalDto.prototype.app = this;\n\n        // this.use(this.logger);\n        this.on('error', async (err: any, ctx: Context) => {\n            if (this.dto === false && this.config.enableDto === true) {\n                const Dto = this.config.globalDto;\n                ctx.body = await (new Dto()).throws(err, ctx.errno || 500, ctx.errmsg);\n            } else {\n                ctx.body = err;\n            }\n            delete ctx.errno;\n            delete ctx.errmsg;\n        });\n        this.use(async (ctx, next) => {\n            const code = ctx.response.status;\n            switch (code) {\n                case 500:\n                case 404: return await logger((str, args) => {\n                    // redirect koa logger to other output pipe\n                    // default is process.stdout(by console.log function)\n                    this.error(str);\n                })(ctx, next);\n                case 200: return await logger((str, args) => {\n                    // redirect koa logger to other output pipe\n                    // default is process.stdout(by console.log function)\n                    this.success(str);\n                })(ctx, next);\n                default: return await logger((str, args) => {\n                    // redirect koa logger to other output pipe\n                    // default is process.stdout(by console.log function)\n                    this.pending(str);\n                })(ctx, next);\n            }\n        });\n        this.use(async (ctx, next) => {\n            if (ctx.response.status !== 200) { return await next(); }\n            if (this.dto === false && this.config.enableDto === true) {\n                const Dto = this.config.globalDto;\n                const trys = await new Dto(ctx.body);\n                ctx.body = trys;\n            }\n            this.dto = false;\n            return next();\n        });\n\n        // tslint:disable-next-line:no-unused-expression\n        callback && callback.apply(this);\n        return this;\n    }\n\n    public async starter() {\n        this.listen(this.config.port, () => {\n            // tslint:disable-next-line:no-unused-expression\n            this.didRuntime && this.didRuntime.apply(this);\n            console.log(green(\n                `PYI Server runtime listen: http://${this.config.host || 'localhost'}:${this.config.port}`\n            ));\n        });\n    }\n\n    public bootstrap(callback?: () => any) {\n        return this._setup.subscribe((app) => {\n            this.setup(app, callback);\n        });\n    }\n}\n"]}