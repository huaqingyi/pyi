{"version":3,"sources":["libs/swagger/swagger.object.ts"],"names":[],"mappings":"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","file":"../../../libs/swagger/swagger.object.js","sourcesContent":["/**\n * used for building swagger docs object\n */\nimport is from 'is-type-of';\nimport _ from 'ramda';\nimport { reservedMethodNames } from 'koa-swagger-decorator/dist/utils';\nimport { Data } from 'koa-swagger-decorator/dist/types';\nimport init from 'koa-swagger-decorator/dist/swaggerTemplate';\nimport { getPath } from 'koa-swagger-decorator/dist/utils';\n\nexport class SwaggerInjectService {\n\n    public static register() {\n        if (!SwaggerInjectService._this) {\n            SwaggerInjectService._this = new SwaggerInjectService();\n        }\n        return SwaggerInjectService.runtime();\n    }\n\n    public static runtime() {\n        if (!SwaggerInjectService._this) { throw new Error('not register SwaggerInjectService service ...'); }\n        return SwaggerInjectService._this;\n    }\n\n    private static _this: SwaggerInjectService;\n\n    public data: Data;\n\n    constructor() {\n        this.data = {};\n    }\n\n    public add(target: any, name: string, content: any) {\n        if (!is.object(content)) {\n            throw new Error('illegal params [content] for SwaggerInjectService.add');\n        }\n\n        // when using non-static method decorators\n        // target will be class.prototype rather than class\n        // hack and make target always be class itself\n        if (!target.prototype && target.constructor) {\n            target = target.constructor;\n        }\n\n        const key = `${target.name}-${name}`;\n        if (!this.data[key]) { this.data[key] = {}; }\n\n        // merge class decorator and method decorator if it is an array\n        // eg. query parameters, tag paramemters\n        Object.keys(content).forEach((k) => {\n            if (is.array(this.data[key][k])) {\n                this.data[key][k] = [...this.data[key][k], ...content[k]];\n                if (this.data[key][k].length === 0) { return; }\n                this.data[key][k] = is.object(this.data[key][k][0]) ?\n                    _.uniqBy((o: { name: string }) => o.name, this.data[key][k])\n                    : _.uniq(this.data[key][k]);\n            } else {\n                Object.assign(this.data[key], { [k]: content[k] });\n            }\n        });\n    }\n\n    // only add to methods with a @request decorator\n    public addMulti(target: any, content: any, filters = ['ALL']) {\n        const staticMethods = Object.getOwnPropertyNames(target)\n            .filter((method) => !reservedMethodNames.includes(method));\n        const methods = Object.getOwnPropertyNames(target.prototype)\n            .filter((method) => !reservedMethodNames.includes(method));\n\n        [...staticMethods, ...methods].forEach((name) => {\n            const key = `${target.name}-${name}`;\n            if (!this.data[key] || !this.data[key].request) { return; }\n            filters = filters.map((i) => i.toLowerCase());\n            if (\n                filters.includes('all') ||\n                filters.includes(this.data[key].request.method)\n            ) {\n                this.add(target, name, content);\n            }\n        });\n    }\n\n    public toJSON(options?: {\n        title?: string,\n        description?: string,\n        version?: string,\n        swaggerOptions?: object\n    }) {\n        if (!options) { options = {}; }\n        const {\n            title,\n            description,\n            version,\n            prefix = '',\n            swaggerOptions = {}\n        } = options as any;\n        const swaggerJSON: any = init(title, description, version, swaggerOptions);\n        Object.keys(this.data).forEach((key) => {\n            const value = this.data[key];\n            if (!Object.keys(value).includes('request')) {\n                return;\n            }\n\n            const { method } = value.request;\n            let { path } = value.request;\n            path = getPath(prefix, value.prefix ? `${value.prefix}${path}` : path); // 根据前缀补全path\n            const summary = value.summary || '';\n            // tslint:disable-next-line:no-shadowed-variable\n            const description = value.description || summary;\n            const responses = value.responses || {\n                200: { description: 'success' }\n            };\n            const {\n                query = [],\n                path: pathParams = [],\n                body = [],\n                tags,\n                formData = [],\n                security,\n                deprecated\n            } = value;\n\n            const parameters = [...pathParams, ...query, ...formData, ...body];\n\n            // init path object first\n            if (!swaggerJSON.paths[path]) {\n                swaggerJSON.paths[path] = {};\n            }\n\n            // add content type [multipart/form-data] to support file upload\n            const consumes = formData.length > 0 ? ['multipart/form-data'] : undefined;\n\n            swaggerJSON.paths[path][method] = {\n                consumes,\n                summary,\n                description,\n                parameters,\n                responses,\n                tags,\n                security,\n                deprecated\n            };\n        });\n        return swaggerJSON;\n    }\n}\n"]}