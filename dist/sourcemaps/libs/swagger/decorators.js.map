{"version":3,"sources":["libs/swagger/decorators.ts"],"names":[],"mappings":";;;;;AAAA,kDAAsB;AACtB,4DAA4B;AAC5B,qDAAwD;AAExD,MAAM,KAAK,GAAG,CAAC,IAAY,EAAE,IAAoB,EAAE,EAAE,CAAC,CAAC,MAAW,EAAE,IAAY,EAAE,UAA8B,EAAE,EAAE;IAChH,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;IAC9B,qCAAoB,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IACnE,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC;AAEF,MAAM,OAAO,GAAG,CACZ,IAAY,EACZ,UAAmC,EACrC,EAAE,CAAC,CAAC,MAAW,EAAE,IAAY,EAAE,UAA8B,EAAE,EAAE;IAC/D,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,EAAE;QAAE,UAAU,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;KAAE;IACvE,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC;IAE/C,8BAA8B;IAC9B,IAAI,iBAAiB,GAAG,UAAU,CAAC;IACnC,IAAI,IAAI,KAAK,MAAM,EAAE;QACjB,iBAAiB,GAAG;YAChB;gBACI,IAAI,EAAE,MAAM;gBACZ,WAAW,EAAE,cAAc;gBAC3B,MAAM,EAAE;oBACJ,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE,UAAU;iBACzB;aACJ;SACJ,CAAC;KACL;SAAM;QACH,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAC3D,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC7D;IACD,iBAAiB,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;QACpC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;IACnB,CAAC,CAAC,CAAC;IAEH,qCAAoB,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,iBAAiB,EAAE,CAAC,CAAC;IAChF,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC;AAEF,MAAM,OAAO,GAAG;AACZ,gDAAgD;AAChD,MAAc,EAAE,IAAqB,EACvC,EAAE,CAAC,CAAC,MAAW,EAAE,IAAY,EAAE,UAA8B,EAAE,EAAE;IAC/D,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;QAC5B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;YAChC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBAAE,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;aAAE;YACjE,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAChB;IACD,MAAM,GAAG,eAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3B,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IACjC,UAAU,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IAC7B,qCAAoB,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE;QAC7C,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;KAC5B,CAAC,CAAC;IACH,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC;AAwIE,0BAAO;AAtIX,gDAAgD;AAChD,MAAM,WAAW,GAAG,CAAC,WAAuB,EAAE,EAAE,CAAC,CAAC,MAAW,EAAE,IAAY,EAAE,UAA8B,EAAE,EAAE;IAC3G,UAAU,CAAC,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC;IAC3C,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC;AA2IE,kCAAW;AAzIf,gDAAgD;AAChD,MAAM,QAAQ,GAAG,CAAC,QAAe,EAAE,EAAE,CAAC,CAAC,MAAW,EAAE,IAAY,EAAE,UAA8B,EAAE,EAAE;IAChG,qCAAoB,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE;QAC7C,QAAQ;KACX,CAAC,CAAC;AACP,CAAC,CAAC;AAqIE,4BAAQ;AAnIZ,MAAM,UAAU,GAAG,CAAC,MAAW,EAAE,IAAY,EAAE,UAA8B,EAAE,EAAE;IAC7E,UAAU,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;IACnC,qCAAoB,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;IACvE,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC;AAkIE,gCAAU;AA7Hd,MAAM,WAAW,GAAe;IAC5B,GAAG,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE;CAClC,CAAC;AACF,gDAAgD;AAChD,MAAM,SAAS,GAAG,CAAC,YAAwB,WAAW,EAAE,EAAE,CAAC,CACvD,MAAW,EACX,IAAY,EACZ,UAA8B,EAChC,EAAE;IACA,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;IACvC,qCAAoB,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC;IAChE,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC;AAgHE,8BAAS;AA/Gb,MAAM,IAAI,GAAG,eAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAsGxB,oBAAI;AApGR,0BAA0B;AAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;AAoGpC,kCAAW;AAlGf,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;AA+F5B,0BAAO;AA7FX,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AAoGtB,oBAAI;AAlGR,MAAM,MAAM,GAAG,eAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AA4F5B,wBAAM;AA1FV,yBAAyB;AAEzB,eAAe;AACf,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AA0F1B,sBAAK;AAxFT,cAAc;AACd,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAwFxB,oBAAI;AAtFR,cAAc;AACd,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAsFxB,oBAAI;AApFR,kBAAkB;AAClB,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAuFhC,4BAAQ;AArFZ,mBAAmB;AACnB,MAAM,OAAO,GAAG,CAAC,KAAwB,EAAE,EAAE,CAAC,CAAC,MAAW,EAAE,EAAE;IAC1D,gDAAgD;IAChD,MAAM,IAAI,GAAG,oBAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC/C,qCAAoB,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,CAAC,CAAC;AAmFE,0BAAO;AAjFX,gDAAgD;AAChD,MAAM,YAAY,GAAG,CAAC,YAAwB,WAAW,EAAE,EAAE,CAAC,CAAC,MAAW,EAAE,EAAE;IAC1E,qCAAoB,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC;AACnE,CAAC,CAAC;AA+EE,oCAAY;AA7EhB,MAAM,cAAc,GAAG,CAAC,KAA4B,EAAE,EAAE,CAAC,CAAC,MAAW,EAAE,EAAE;IACrE,gDAAgD;IAChD,MAAM,WAAW,GAAG,oBAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACtD,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;AACrC,CAAC,CAAC;AA0EE,wCAAc;AAxElB,gDAAgD;AAChD,MAAM,WAAW,GAAG,CAAC,QAAqB,EAAE,EAAE,CAAC,CAAC,MAAW,EAAE,EAAE;IAC3D,MAAM,gBAAgB,GAAG,oBAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACpE,qCAAoB,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE;QAC5C,QAAQ,EAAE,gBAAgB;KAC7B,CAAC,CAAC;AACP,CAAC,CAAC;AAmEE,kCAAW;AAjEf,MAAM,aAAa,GAAG,CAAC,MAAW,EAAE,EAAE;IAClC,qCAAoB,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAC1E,CAAC,CAAC;AAgEE,sCAAa;AA9DjB,gDAAgD;AAChD,MAAM,MAAM,GAAG,CAAC,MAAc,EAAE,EAAE,CAAC,CAAC,MAAW,EAAE,EAAE;IAC/C,qCAAoB,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IAC5D,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;AAC3B,CAAC,CAAC;AA4DE,wBAAM;AA1DV,MAAM,QAAQ,GAAG,CAAC,UAAmC,EAAE,OAAO,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,MAAW,EAAE,EAAE;IACzF,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;QAAE,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;KAAE;IACnD,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,CAAC,oCAAoC;IAC1E,MAAM,CAAC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,oCAAoC;IACzE,MAAM,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAC1D,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnD,iBAAiB,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QAC/B,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC;IACtB,CAAC,CAAC,CAAC;IACH,qCAAoB,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,EAAE,OAAO,CAAC,CAAC;AAC3F,CAAC,CAAC;AA+CE,4BAAQ;AA9CZ,MAAM,GAAG,GAAG;IACR,OAAO;IACP,OAAO;IACP,MAAM;IACN,IAAI;IACJ,WAAW;IACX,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,WAAW;IACX,QAAQ;IACR,QAAQ;IACR,SAAS;IACT,UAAU;IACV,OAAO;IACP,YAAY;IACZ,cAAc;IACd,aAAa;IACb,WAAW;IACX,QAAQ;IACR,MAAM;CACT,CAAC;AAEF,kBAAe,GAAG,CAAC","file":"../../../libs/swagger/decorators.js","sourcesContent":["import _ from 'ramda';\nimport is from 'is-type-of';\nimport { SwaggerInjectService } from './swagger.object';\n\nconst _desc = (type: string, text: string | any[]) => (target: any, name: string, descriptor: PropertyDescriptor) => {\n    descriptor.value[type] = text;\n    SwaggerInjectService.runtime().add(target, name, { [type]: text });\n    return descriptor;\n};\n\nconst _params = (\n    type: string,\n    parameters: { [name: string]: any }\n) => (target: any, name: string, descriptor: PropertyDescriptor) => {\n    if (!descriptor.value.parameters) { descriptor.value.parameters = {}; }\n    descriptor.value.parameters[type] = parameters;\n\n    // additional wrapper for body\n    let swaggerParameters = parameters;\n    if (type === 'body') {\n        swaggerParameters = [\n            {\n                name: 'data',\n                description: 'request body',\n                schema: {\n                    type: 'object',\n                    properties: parameters\n                }\n            }\n        ];\n    } else {\n        swaggerParameters = Object.keys(swaggerParameters).map((key) =>\n            Object.assign({ name: key }, swaggerParameters[key]));\n    }\n    swaggerParameters.forEach((item: any) => {\n        item.in = type;\n    });\n\n    SwaggerInjectService.runtime().add(target, name, { [type]: swaggerParameters });\n    return descriptor;\n};\n\nconst request = (\n    // tslint:disable-next-line:no-shadowed-variable\n    method: string, path: string | RegExp\n) => (target: any, name: string, descriptor: PropertyDescriptor) => {\n    if (typeof (path) === 'string') {\n        path = path.split('/').map((item) => {\n            if (item.indexOf(':') === 0) { item = `{${item.substring(1)}}`; }\n            return item;\n        }).join('/');\n    }\n    method = _.toLower(method);\n    descriptor.value.method = method;\n    descriptor.value.path = path;\n    SwaggerInjectService.runtime().add(target, name, {\n        request: { method, path },\n    });\n    return descriptor;\n};\n\n// tslint:disable-next-line:no-shadowed-variable\nconst middlewares = (middlewares: Function[]) => (target: any, name: string, descriptor: PropertyDescriptor) => {\n    descriptor.value.middlewares = middlewares;\n    return descriptor;\n};\n\n// tslint:disable-next-line:no-shadowed-variable\nconst security = (security: any[]) => (target: any, name: string, descriptor: PropertyDescriptor) => {\n    SwaggerInjectService.runtime().add(target, name, {\n        security\n    });\n};\n\nconst deprecated = (target: any, name: string, descriptor: PropertyDescriptor) => {\n    descriptor.value.deprecated = true;\n    SwaggerInjectService.runtime().add(target, name, { deprecated: true });\n    return descriptor;\n};\n\nexport interface IResponses {\n    [name: number]: any;\n}\nconst defaultResp: IResponses = {\n    200: { description: 'success' }\n};\n// tslint:disable-next-line:no-shadowed-variable\nconst responses = (responses: IResponses = defaultResp) => (\n    target: any,\n    name: string,\n    descriptor: PropertyDescriptor\n) => {\n    descriptor.value.responses = responses;\n    SwaggerInjectService.runtime().add(target, name, { responses });\n    return descriptor;\n};\nconst desc = _.curry(_desc);\n\n// description and summary\nconst description = desc('description');\n\nconst summary = desc('summary');\n\nconst tags = desc('tags');\n\nconst params = _.curry(_params);\n\n// below are [parameters]\n\n// query params\nconst query = params('query');\n\n// path params\nconst path = params('path');\n\n// body params\nconst body = params('body');\n\n// formData params\nconst formData = params('formData');\n\n// class decorators\nconst tagsAll = (items: string[] | string) => (target: any) => {\n    // tslint:disable-next-line:no-shadowed-variable\n    const tags = is.array(items) ? items : [items];\n    SwaggerInjectService.runtime().addMulti(target, { tags });\n};\n\n// tslint:disable-next-line:no-shadowed-variable\nconst responsesAll = (responses: IResponses = defaultResp) => (target: any) => {\n    SwaggerInjectService.runtime().addMulti(target, { responses });\n};\n\nconst middlewaresAll = (items: Function[] | Function) => (target: any) => {\n    // tslint:disable-next-line:no-shadowed-variable\n    const middlewares = is.array(items) ? items : [items];\n    target.middlewares = middlewares;\n};\n\n// tslint:disable-next-line:no-shadowed-variable\nconst securityAll = (security: any[] | any) => (target: any) => {\n    const authentitactions = is.array(security) ? security : [security];\n    SwaggerInjectService.runtime().addMulti(target, {\n        security: authentitactions\n    });\n};\n\nconst deprecatedAll = (target: any) => {\n    SwaggerInjectService.runtime().addMulti(target, { deprecated: true });\n};\n\n// tslint:disable-next-line:no-shadowed-variable\nconst prefix = (prefix: string) => (target: any) => {\n    SwaggerInjectService.runtime().addMulti(target, { prefix });\n    target.prefix = prefix;\n};\n\nconst queryAll = (parameters: { [name: string]: any }, filters = ['ALL']) => (target: any) => {\n    if (!target.parameters) { target.parameters = {}; }\n    target.parameters.query = parameters; // used in wrapper.js for validation\n    target.parameters.filters = filters; // used in wrapper.js for validation\n    const swaggerParameters = Object.keys(parameters).map((key) =>\n        Object.assign({ name: key }, parameters[key]));\n    swaggerParameters.forEach((item) => {\n        item.in = 'query';\n    });\n    SwaggerInjectService.runtime().addMulti(target, { query: swaggerParameters }, filters);\n};\nconst Doc = {\n    request,\n    summary,\n    params,\n    desc,\n    description,\n    query,\n    path,\n    body,\n    tags,\n    middlewares,\n    security,\n    formData,\n    responses,\n    deprecated,\n    tagsAll,\n    responsesAll,\n    middlewaresAll,\n    deprecatedAll,\n    securityAll,\n    queryAll,\n    prefix\n};\n\nexport default Doc;\n\nexport {\n    request,\n    summary,\n    params,\n    desc,\n    description,\n    query,\n    path,\n    body,\n    tags,\n    middlewares,\n    security,\n    formData,\n    responses,\n    deprecated,\n    tagsAll,\n    responsesAll,\n    middlewaresAll,\n    securityAll,\n    deprecatedAll,\n    queryAll,\n    prefix\n};\n"]}